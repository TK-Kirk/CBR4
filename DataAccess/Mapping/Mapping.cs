

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "DataAccess\App.config"
//     Connection String Name: "GloshareContext"
//     Connection String:      "data source=bluebeam;initial catalog=Gloshare;integrated security=True;MultipleActiveResultSets=True;App=EntityFramework"
// ------------------------------------------------------------------------------------------------
// Database Edition       : Developer Edition (64-bit)
// Database Engine Edition: Enterprise

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


using CBR.Core.Entities.Models;
namespace CBR.DataAccess.Mapping
{
    using CBR.DataAccess;

    #region POCO Configuration

    // Affiliate
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class AffiliateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Affiliate>
    {
        public AffiliateConfiguration()
            : this("dbo")
        {
        }

        public AffiliateConfiguration(string schema)
        {
            ToTable("Affiliate", schema);
            HasKey(x => x.AffiliateId);

            Property(x => x.AffiliateId).HasColumnName(@"AffiliateID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(5).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AffiliateName).HasColumnName(@"AffiliateName").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.RegisteredEmail).HasColumnName(@"RegisteredEmail").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Password).HasColumnName(@"Password").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AcceptedTandCDate).HasColumnName(@"AcceptedTandCDate").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.PayForScrubs).HasColumnName(@"PayForScrubs").HasColumnType("bit").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AffiliateCountry
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class AffiliateCountryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AffiliateCountry>
    {
        public AffiliateCountryConfiguration()
            : this("dbo")
        {
        }

        public AffiliateCountryConfiguration(string schema)
        {
            ToTable("AffiliateCountry", schema);
            HasKey(x => new { x.AffiliateId, x.CountryId });

            Property(x => x.AffiliateId).HasColumnName(@"AffiliateID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AffiliateSub
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class AffiliateSubConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AffiliateSub>
    {
        public AffiliateSubConfiguration()
            : this("dbo")
        {
        }

        public AffiliateSubConfiguration(string schema)
        {
            ToTable("AffiliateSub", schema);
            HasKey(x => x.AffiliateId);

            Property(x => x.AffiliateId).HasColumnName(@"AffiliateID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OfferId).HasColumnName(@"OfferID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SubId).HasColumnName(@"SubID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CostPerLead).HasColumnName(@"CostPerLead").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.ReceiveShareMultiplier).HasColumnName(@"ReceiveShareMultiplier").HasColumnType("float").IsRequired();
            Property(x => x.DailyCap).HasColumnName(@"DailyCap").HasColumnType("int").IsRequired();
            Property(x => x.MonthlyCap).HasColumnName(@"MonthlyCap").HasColumnType("int").IsRequired();
            Property(x => x.Enabled).HasColumnName(@"Enabled").HasColumnType("bit").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // allInboxClikBackup
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class AllInboxClikBackupConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AllInboxClikBackup>
    {
        public AllInboxClikBackupConfiguration()
            : this("dbo")
        {
        }

        public AllInboxClikBackupConfiguration(string schema)
        {
            ToTable("allInboxClikBackup", schema);
            HasKey(x => new { x.PqpId, x.InsertDate });

            Property(x => x.PqpId).HasColumnName(@"PqpID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // AweberDemoUpdate
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class AweberDemoUpdateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AweberDemoUpdate>
    {
        public AweberDemoUpdateConfiguration()
            : this("dbo")
        {
        }

        public AweberDemoUpdateConfiguration(string schema)
        {
            ToTable("AweberDemoUpdate", schema);
            HasKey(x => x.EmailAddress);

            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(500).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Status).HasColumnName(@"Status").HasColumnType("int").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // BatchFileExportLeadsSent
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class BatchFileExportLeadsSentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BatchFileExportLeadsSent>
    {
        public BatchFileExportLeadsSentConfiguration()
            : this("dbo")
        {
        }

        public BatchFileExportLeadsSentConfiguration(string schema)
        {
            ToTable("BatchFileExportLeadsSent", schema);
            HasKey(x => new { x.AffiliateId, x.EmailAddress });

            Property(x => x.AffiliateId).HasColumnName(@"AffiliateID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(5).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateExported).HasColumnName(@"DateExported").HasColumnType("datetime").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CBRConsent
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CbrConsentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrConsent>
    {
        public CbrConsentConfiguration()
            : this("dbo")
        {
        }

        public CbrConsentConfiguration(string schema)
        {
            ToTable("CBRConsent", schema);
            HasKey(x => x.CbrConsentId);

            Property(x => x.CbrConsentId).HasColumnName(@"CBRConsentId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.DateofConsent).HasColumnName(@"DateofConsent").HasColumnType("datetime").IsRequired();
            Property(x => x.IpAddress).HasColumnName(@"IpAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CBREmailAddressChange
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CbrEmailAddressChangeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrEmailAddressChange>
    {
        public CbrEmailAddressChangeConfiguration()
            : this("dbo")
        {
        }

        public CbrEmailAddressChangeConfiguration(string schema)
        {
            ToTable("CBREmailAddressChange", schema);
            HasKey(x => new { x.EmailAddress, x.NewEmailAddress, x.ChangeDate });

            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.NewEmailAddress).HasColumnName(@"NewEmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ChangeDate).HasColumnName(@"ChangeDate").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CBREmailDailyBatchCounter
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CbrEmailDailyBatchCounterConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrEmailDailyBatchCounter>
    {
        public CbrEmailDailyBatchCounterConfiguration()
            : this("dbo")
        {
        }

        public CbrEmailDailyBatchCounterConfiguration(string schema)
        {
            ToTable("CBREmailDailyBatchCounter", schema);
            HasKey(x => x.LastIdProcessed);

            Property(x => x.LastIdProcessed).HasColumnName(@"LastIDProcessed").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CBRJobCode
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CbrJobCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrJobCode>
    {
        public CbrJobCodeConfiguration()
            : this("dbo")
        {
        }

        public CbrJobCodeConfiguration(string schema)
        {
            ToTable("CBRJobCode", schema);
            HasKey(x => x.CbrJobCodeId);

            Property(x => x.CbrJobCodeId).HasColumnName(@"CBRJobCodeID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.OccupationCode).HasColumnName(@"OccupationCode").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CbrQuestionDropdownId).HasColumnName(@"CBRQuestionDropdownID").HasColumnType("int").IsRequired();
            Property(x => x.Active).HasColumnName(@"Active").HasColumnType("bit").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CBRLead
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CbrLeadConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrLead>
    {
        public CbrLeadConfiguration()
            : this("dbo")
        {
        }

        public CbrLeadConfiguration(string schema)
        {
            ToTable("CBRLead", schema);
            HasKey(x => x.CbrLeadId);

            Property(x => x.CbrLeadId).HasColumnName(@"CBRLeadId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Salutation).HasColumnName(@"Salutation").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Firstname).HasColumnName(@"Firstname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Lastname).HasColumnName(@"Lastname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Address2).HasColumnName(@"Address2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.City).HasColumnName(@"City").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.State).HasColumnName(@"State").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Zip).HasColumnName(@"Zip").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Phone).HasColumnName(@"Phone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Mobilephone).HasColumnName(@"Mobilephone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.SmartPhone).HasColumnName(@"SmartPhone").HasColumnType("bit").IsOptional();
            Property(x => x.BirthdayDay).HasColumnName(@"BirthdayDay").HasColumnType("int").IsOptional();
            Property(x => x.BirthdayMonth).HasColumnName(@"BirthdayMonth").HasColumnType("int").IsOptional();
            Property(x => x.BirthdayYear).HasColumnName(@"BirthdayYear").HasColumnType("int").IsOptional();
            Property(x => x.Gender).HasColumnName(@"Gender").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1);
            Property(x => x.Occupation).HasColumnName(@"Occupation").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Income).HasColumnName(@"Income").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.HomeOwnership).HasColumnName(@"HomeOwnership").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Education).HasColumnName(@"Education").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.MaritalStatus).HasColumnName(@"MaritalStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Children).HasColumnName(@"Children").HasColumnType("int").IsOptional();
            Property(x => x.Ethnicity).HasColumnName(@"Ethnicity").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Password).HasColumnName(@"Password").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.OfferId).HasColumnName(@"OfferID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.AffiliateId).HasColumnName(@"AffiliateID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.SubId).HasColumnName(@"SubID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Cost).HasColumnName(@"Cost").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2);
            Property(x => x.SelectedLanguageId).HasColumnName(@"SelectedLanguageID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2);
            Property(x => x.OptInDate).HasColumnName(@"OptInDate").HasColumnType("datetime").IsRequired();
            Property(x => x.LastRunDate).HasColumnName(@"LastRunDate").HasColumnType("datetime").IsRequired();
            Property(x => x.LastSendOnDay).HasColumnName(@"LastSendOnDay").HasColumnType("int").IsRequired();
            Property(x => x.OptOutDate).HasColumnName(@"OptOutDate").HasColumnType("datetime").IsOptional();
            Property(x => x.DoNotSendTo).HasColumnName(@"DoNotSendTo").HasColumnType("bit").IsRequired();
            Property(x => x.ConfirmedDate).HasColumnName(@"ConfirmedDate").HasColumnType("datetime").IsOptional();
            Property(x => x.ThirdPartyListsUpdated).HasColumnName(@"ThirdPartyListsUpdated").HasColumnType("bit").IsRequired();
            Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired();
            Property(x => x.Ip).HasColumnName(@"IP").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.Uid).HasColumnName(@"UID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Clik).HasColumnName(@"Clik").HasColumnType("bit").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CBRPayout
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CbrPayoutConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrPayout>
    {
        public CbrPayoutConfiguration()
            : this("dbo")
        {
        }

        public CbrPayoutConfiguration(string schema)
        {
            ToTable("CBRPayout", schema);
            HasKey(x => new { x.EmailAddress, x.CountryId, x.RequestAmount, x.OptionId, x.Type, x.RequestForPaymentDate });

            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.PaypalEmailAddress).HasColumnName(@"PaypalEmailAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.RequestAmount).HasColumnName(@"RequestAmount").HasColumnType("money").IsRequired().HasPrecision(19,4).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OptionId).HasColumnName(@"OptionID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Type).HasColumnName(@"Type").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.RequestForPaymentDate).HasColumnName(@"RequestForPaymentDate").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.PaidDate).HasColumnName(@"PaidDate").HasColumnType("datetime").IsOptional();
            Property(x => x.Ip).HasColumnName(@"IP").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CBRQuestion
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CbrQuestionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrQuestion>
    {
        public CbrQuestionConfiguration()
            : this("dbo")
        {
        }

        public CbrQuestionConfiguration(string schema)
        {
            ToTable("CBRQuestion", schema);
            HasKey(x => new { x.Id, x.ElabsId });

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Question).HasColumnName(@"Question").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Type).HasColumnName(@"Type").HasColumnType("int").IsRequired();
            Property(x => x.ElabsId).HasColumnName(@"ElabsID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.JinglioOfferId).HasColumnName(@"JinglioOfferID").HasColumnType("int").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CBRQuestionAnswers
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CbrQuestionAnswerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrQuestionAnswer>
    {
        public CbrQuestionAnswerConfiguration()
            : this("dbo")
        {
        }

        public CbrQuestionAnswerConfiguration(string schema)
        {
            ToTable("CBRQuestionAnswers", schema);
            HasKey(x => new { x.EmailAddress, x.QuestionId });

            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.QuestionId).HasColumnName(@"QuestionID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Answer).HasColumnName(@"Answer").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.AnswerDate).HasColumnName(@"AnswerDate").HasColumnType("datetime").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CBRQuestionDropdown
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CbrQuestionDropdownConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrQuestionDropdown>
    {
        public CbrQuestionDropdownConfiguration()
            : this("dbo")
        {
        }

        public CbrQuestionDropdownConfiguration(string schema)
        {
            ToTable("CBRQuestionDropdown", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.QuestionId).HasColumnName(@"QuestionID").HasColumnType("int").IsRequired();
            Property(x => x.Answer).HasColumnName(@"Answer").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Rank).HasColumnName(@"Rank").HasColumnType("int").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CBRSignup
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CbrSignupConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrSignup>
    {
        public CbrSignupConfiguration()
            : this("dbo")
        {
        }

        public CbrSignupConfiguration(string schema)
        {
            ToTable("CBRSignup", schema);
            HasKey(x => x.CbrSignupId);

            Property(x => x.CbrSignupId).HasColumnName(@"CBRSignupID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.OfferId).HasColumnName(@"OfferID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.AffiliateId).HasColumnName(@"AffiliateID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.SubId).HasColumnName(@"SubID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.SignupDate).HasColumnName(@"SignupDate").HasColumnType("datetime").IsRequired();
            Property(x => x.TransactionId).HasColumnName(@"TransactionID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CBRSignupError
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CbrSignupErrorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrSignupError>
    {
        public CbrSignupErrorConfiguration()
            : this("dbo")
        {
        }

        public CbrSignupErrorConfiguration(string schema)
        {
            ToTable("CBRSignupError", schema);
            HasKey(x => x.CbrSignupErrorId);

            Property(x => x.CbrSignupErrorId).HasColumnName(@"CBRSignupErrorID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.OfferId).HasColumnName(@"OfferID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.AffiliateId).HasColumnName(@"AffiliateID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.SubId).HasColumnName(@"SubID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.SignupDate).HasColumnName(@"SignupDate").HasColumnType("datetime").IsRequired();
            Property(x => x.TransactionId).HasColumnName(@"TransactionID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.ErrorMessage).HasColumnName(@"ErrorMessage").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8000);
            Property(x => x.Url).HasColumnName(@"URL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1000);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CBRSurvey
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CbrSurveyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrSurvey>
    {
        public CbrSurveyConfiguration()
            : this("dbo")
        {
        }

        public CbrSurveyConfiguration(string schema)
        {
            ToTable("CBRSurvey", schema);
            HasKey(x => new { x.Id, x.Title, x.CountryId, x.ClickPayoutValue, x.ClickReceiveValue, x.ClickCode, x.PayoutValue, x.ReceiveValue, x.AffiliateCampaignId, x.Type, x.Url, x.ImageWidth, x.ImageHeight, x.QuestionCount, x.DailyCapPerUser, x.Rank, x.Hide, x.Enabled, x.Approved, x.CausesConversion, x.CreateDate, x.DaysPending, x.DisplaysForType, x.IncentFriendly });

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Title).HasColumnName(@"Title").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(511).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8000);
            Property(x => x.Requirements).HasColumnName(@"Requirements").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1536);
            Property(x => x.Category).HasColumnName(@"Category").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(20);
            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ClickPayoutValue).HasColumnName(@"ClickPayoutValue").HasColumnType("money").IsRequired().HasPrecision(19,4).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ClickReceiveValue).HasColumnName(@"ClickReceiveValue").HasColumnType("money").IsRequired().HasPrecision(19,4).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ClickCode).HasColumnName(@"ClickCode").HasColumnType("uniqueidentifier").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.PayoutValue).HasColumnName(@"PayoutValue").HasColumnType("money").IsRequired().HasPrecision(19,4).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ReceiveValue).HasColumnName(@"ReceiveValue").HasColumnType("money").IsRequired().HasPrecision(19,4).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AffiliateCampaignId).HasColumnName(@"AffiliateCampaignID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Type).HasColumnName(@"Type").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Url).HasColumnName(@"URL").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ImageUrl).HasColumnName(@"ImageURL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.ImageWidth).HasColumnName(@"ImageWidth").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ImageHeight).HasColumnName(@"ImageHeight").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.QuestionCount).HasColumnName(@"QuestionCount").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.QuestionPageTitle).HasColumnName(@"QuestionPageTitle").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.QuestionPageHeader).HasColumnName(@"QuestionPageHeader").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8000);
            Property(x => x.QuestionPageFooter).HasColumnName(@"QuestionPageFooter").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8000);
            Property(x => x.DailyCapPerUser).HasColumnName(@"DailyCapPerUser").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Rank).HasColumnName(@"Rank").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Hide).HasColumnName(@"Hide").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Enabled).HasColumnName(@"Enabled").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Approved).HasColumnName(@"Approved").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CausesConversion).HasColumnName(@"CausesConversion").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DaysPending).HasColumnName(@"DaysPending").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DisplaysForType).HasColumnName(@"DisplaysForType").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.IncentFriendly).HasColumnName(@"IncentFriendly").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CBRSurveyInstruction
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CbrSurveyInstructionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrSurveyInstruction>
    {
        public CbrSurveyInstructionConfiguration()
            : this("dbo")
        {
        }

        public CbrSurveyInstructionConfiguration(string schema)
        {
            ToTable("CBRSurveyInstruction", schema);
            HasKey(x => x.CbrSurveyInstructionId);

            Property(x => x.CbrSurveyInstructionId).HasColumnName(@"CBRSurveyInstructionID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SurveyId).HasColumnName(@"SurveyID").HasColumnType("int").IsRequired();
            Property(x => x.AboutText).HasColumnName(@"AboutText").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.AboutSubheading).HasColumnName(@"AboutSubheading").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2000);
            Property(x => x.Active).HasColumnName(@"Active").HasColumnType("bit").IsRequired();
            Property(x => x.CreditCardRequired).HasColumnName(@"CreditCardRequired").HasColumnType("bit").IsRequired();
            Property(x => x.HasInterstitial).HasColumnName(@"HasInterstitial").HasColumnType("bit").IsRequired();
            Property(x => x.InterstitialText).HasColumnName(@"InterstitialText").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2000);
            Property(x => x.LastUpdated).HasColumnName(@"LastUpdated").HasColumnType("datetime").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CBRSurveyQuestion
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CbrSurveyQuestionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrSurveyQuestion>
    {
        public CbrSurveyQuestionConfiguration()
            : this("dbo")
        {
        }

        public CbrSurveyQuestionConfiguration(string schema)
        {
            ToTable("CBRSurveyQuestion", schema);
            HasKey(x => new { x.SurveyId, x.QuestionId });

            Property(x => x.SurveyId).HasColumnName(@"SurveyID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.QuestionId).HasColumnName(@"QuestionID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Rank).HasColumnName(@"Rank").HasColumnType("int").IsRequired();
            Property(x => x.DisplayToUser).HasColumnName(@"DisplayToUser").HasColumnType("bit").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CBRSurveyStatus
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CbrSurveyStatuConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrSurveyStatu>
    {
        public CbrSurveyStatuConfiguration()
            : this("dbo")
        {
        }

        public CbrSurveyStatuConfiguration(string schema)
        {
            ToTable("CBRSurveyStatus", schema);
            HasKey(x => new { x.EmailAddress, x.SurveyId, x.Id });

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SurveyId).HasColumnName(@"SurveyID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.PayoutValue).HasColumnName(@"PayoutValue").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.ReceiveValue).HasColumnName(@"ReceiveValue").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.StatusId).HasColumnName(@"StatusID").HasColumnType("int").IsRequired();
            Property(x => x.DtCookieId).HasColumnName(@"DTCookieID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.RandomId).HasColumnName(@"RandomID").HasColumnType("int").IsOptional();
            Property(x => x.AffCookieId).HasColumnName(@"AffCookieID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired();
            Property(x => x.CompletedDate).HasColumnName(@"CompletedDate").HasColumnType("datetime").IsOptional();
            Property(x => x.DeniedDate).HasColumnName(@"DeniedDate").HasColumnType("datetime").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // cbrSurveyStatusOutput
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CbrSurveyStatusOutputConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrSurveyStatusOutput>
    {
        public CbrSurveyStatusOutputConfiguration()
            : this("dbo")
        {
        }

        public CbrSurveyStatusOutputConfiguration(string schema)
        {
            ToTable("cbrSurveyStatusOutput", schema);
            HasKey(x => new { x.Id, x.EmailAddress, x.SurveyId, x.PayoutValue, x.ReceiveValue, x.StatusId, x.InsertDate });

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SurveyId).HasColumnName(@"SurveyID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.PayoutValue).HasColumnName(@"PayoutValue").HasColumnType("money").IsRequired().HasPrecision(19,4).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ReceiveValue).HasColumnName(@"ReceiveValue").HasColumnType("money").IsRequired().HasPrecision(19,4).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.StatusId).HasColumnName(@"StatusID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DtCookieId).HasColumnName(@"DTCookieID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.RandomId).HasColumnName(@"RandomID").HasColumnType("int").IsOptional();
            Property(x => x.AffCookieId).HasColumnName(@"AffCookieID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CompletedDate).HasColumnName(@"CompletedDate").HasColumnType("datetime").IsOptional();
            Property(x => x.DeniedDate).HasColumnName(@"DeniedDate").HasColumnType("datetime").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CBRSurveyStatusType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CbrSurveyStatusTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrSurveyStatusType>
    {
        public CbrSurveyStatusTypeConfiguration()
            : this("dbo")
        {
        }

        public CbrSurveyStatusTypeConfiguration(string schema)
        {
            ToTable("CBRSurveyStatusType", schema);
            HasKey(x => new { x.Id, x.Description });

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CBRSurveyTarget
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CbrSurveyTargetConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrSurveyTarget>
    {
        public CbrSurveyTargetConfiguration()
            : this("dbo")
        {
        }

        public CbrSurveyTargetConfiguration(string schema)
        {
            ToTable("CBRSurveyTarget", schema);
            HasKey(x => new { x.Id, x.SurveyId, x.QuestionId });

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SurveyId).HasColumnName(@"SurveyID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.QuestionId).HasColumnName(@"QuestionID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Operator).HasColumnName(@"Operator").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Value).HasColumnName(@"Value").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.RequiredForInclusion).HasColumnName(@"RequiredForInclusion").HasColumnType("bit").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CBRSurveyWithdraw
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CbrSurveyWithdrawConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrSurveyWithdraw>
    {
        public CbrSurveyWithdrawConfiguration()
            : this("dbo")
        {
        }

        public CbrSurveyWithdrawConfiguration(string schema)
        {
            ToTable("CBRSurveyWithdraw", schema);
            HasKey(x => x.CbrSurveyWithdrawId);

            Property(x => x.CbrSurveyWithdrawId).HasColumnName(@"CBRSurveyWithdrawID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(250);
            Property(x => x.SurveyId).HasColumnName(@"SurveyID").HasColumnType("int").IsRequired();
            Property(x => x.AffiliateCampaignId).HasColumnName(@"AffiliateCampaignID").HasColumnType("int").IsRequired();
            Property(x => x.WithdrawDate).HasColumnName(@"WithdrawDate").HasColumnType("datetime").IsRequired();
            Property(x => x.WithdrawReasonId).HasColumnName(@"WithdrawReasonID").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.WithdrawReason).WithMany(b => b.CbrSurveyWithdraws).HasForeignKey(c => c.WithdrawReasonId).WillCascadeOnDelete(false); // FK_CBRSurveyWithdraw_WithdrawReason
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CBRVerification
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CbrVerificationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrVerification>
    {
        public CbrVerificationConfiguration()
            : this("dbo")
        {
        }

        public CbrVerificationConfiguration(string schema)
        {
            ToTable("CBRVerification", schema);
            HasKey(x => x.CbrVerificationId);

            Property(x => x.CbrVerificationId).HasColumnName(@"CbrVerificationID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CBRZipVerified
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CbrZipVerifiedConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CbrZipVerified>
    {
        public CbrZipVerifiedConfiguration()
            : this("dbo")
        {
        }

        public CbrZipVerifiedConfiguration(string schema)
        {
            ToTable("CBRZipVerified", schema);
            HasKey(x => x.CbrZipVerifiedId);

            Property(x => x.CbrZipVerifiedId).HasColumnName(@"CBRZipVerifiedId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.ValidIpAddress).HasColumnName(@"ValidIpAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(15);
            Property(x => x.ValidZip).HasColumnName(@"ValidZip").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Coreg
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CoregConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Coreg>
    {
        public CoregConfiguration()
            : this("dbo")
        {
        }

        public CoregConfiguration(string schema)
        {
            ToTable("Coreg", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Url).HasColumnName(@"URL").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Cap).HasColumnName(@"Cap").HasColumnType("int").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CoregError
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CoregErrorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CoregError>
    {
        public CoregErrorConfiguration()
            : this("dbo")
        {
        }

        public CoregErrorConfiguration(string schema)
        {
            ToTable("CoregError", schema);
            HasKey(x => x.CoregErrorId);

            Property(x => x.CoregErrorId).HasColumnName(@"CoregErrorID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Partner).HasColumnName(@"Partner").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Url).HasColumnName(@"Url").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(8000);
            Property(x => x.PostData).HasColumnName(@"PostData").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8000);
            Property(x => x.Response).HasColumnName(@"Response").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(8000);
            Property(x => x.DateInserted).HasColumnName(@"DateInserted").HasColumnType("datetime").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Country
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CountryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Country>
    {
        public CountryConfiguration()
            : this("dbo")
        {
        }

        public CountryConfiguration(string schema)
        {
            ToTable("Country", schema);
            HasKey(x => new { x.CountryId, x.CountryName });

            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CountryName).HasColumnName(@"CountryName").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CountryLanguageDefault
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CountryLanguageDefaultConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CountryLanguageDefault>
    {
        public CountryLanguageDefaultConfiguration()
            : this("dbo")
        {
        }

        public CountryLanguageDefaultConfiguration(string schema)
        {
            ToTable("CountryLanguageDefault", schema);
            HasKey(x => new { x.CountryId, x.LanguageId });

            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.LanguageId).HasColumnName(@"LanguageID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CPANotification
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CpaNotificationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CpaNotification>
    {
        public CpaNotificationConfiguration()
            : this("dbo")
        {
        }

        public CpaNotificationConfiguration(string schema)
        {
            ToTable("CPANotification", schema);
            HasKey(x => x.CpaNotificationId);

            Property(x => x.CpaNotificationId).HasColumnName(@"CPANotificationId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.CpaNotificationTypeId).HasColumnName(@"CPANotificationTypeId").HasColumnType("int").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.Sent).HasColumnName(@"Sent").HasColumnType("bit").IsRequired();
            Property(x => x.SentDate).HasColumnName(@"SentDate").HasColumnType("datetime").IsOptional();
            Property(x => x.Subject).HasColumnName(@"Subject").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(250);
            Property(x => x.Body).HasColumnName(@"Body").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2000);
            Property(x => x.AffiliateId).HasColumnName(@"AffiliateId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.OfferId).HasColumnName(@"OfferId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SubId).HasColumnName(@"SubId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CpaNotificationJobId).HasColumnName(@"CPANotificationJobId").HasColumnType("int").IsRequired();

            // Foreign keys
            HasRequired(a => a.CpaNotificationJob).WithMany(b => b.CpaNotifications).HasForeignKey(c => c.CpaNotificationJobId).WillCascadeOnDelete(false); // FK_CPANotification_CPANotificationJob
            HasRequired(a => a.CpaNotificationType).WithMany(b => b.CpaNotifications).HasForeignKey(c => c.CpaNotificationTypeId).WillCascadeOnDelete(false); // FK_CPANotification_CPANotificationType
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CPANotificationJob
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CpaNotificationJobConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CpaNotificationJob>
    {
        public CpaNotificationJobConfiguration()
            : this("dbo")
        {
        }

        public CpaNotificationJobConfiguration(string schema)
        {
            ToTable("CPANotificationJob", schema);
            HasKey(x => x.CpaNotificationJobId);

            Property(x => x.CpaNotificationJobId).HasColumnName(@"CPANotificationJobId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.CpaNotificationTypeId).HasColumnName(@"CPANotificationTypeId").HasColumnType("int").IsRequired();
            Property(x => x.TimeStarted).HasColumnName(@"TimeStarted").HasColumnType("datetime").IsRequired();
            Property(x => x.TimeComplete).HasColumnName(@"TimeComplete").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.CpaNotificationType).WithMany(b => b.CpaNotificationJobs).HasForeignKey(c => c.CpaNotificationTypeId).WillCascadeOnDelete(false); // FK_CPANotificationJob_CPANotificationType
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CPANotificationNewSub
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CpaNotificationNewSubConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CpaNotificationNewSub>
    {
        public CpaNotificationNewSubConfiguration()
            : this("dbo")
        {
        }

        public CpaNotificationNewSubConfiguration(string schema)
        {
            ToTable("CPANotificationNewSub", schema);
            HasKey(x => x.CpaNotificationNewSubId);

            Property(x => x.CpaNotificationNewSubId).HasColumnName(@"CPANotificationNewSubId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AffiliateId).HasColumnName(@"AffiliateId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.OfferId).HasColumnName(@"OfferId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100);
            Property(x => x.SubId).HasColumnName(@"SubId").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.IsEstablished).HasColumnName(@"IsEstablished").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.LastRoiCheckpoint).HasColumnName(@"LastROICheckpoint").HasColumnType("int").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // CPANotificationType
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class CpaNotificationTypeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CpaNotificationType>
    {
        public CpaNotificationTypeConfiguration()
            : this("dbo")
        {
        }

        public CpaNotificationTypeConfiguration(string schema)
        {
            ToTable("CPANotificationType", schema);
            HasKey(x => x.CpaNotificationTypeId);

            Property(x => x.CpaNotificationTypeId).HasColumnName(@"CPANotificationTypeId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // DashboardOverlay
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class DashboardOverlayConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DashboardOverlay>
    {
        public DashboardOverlayConfiguration()
            : this("dbo")
        {
        }

        public DashboardOverlayConfiguration(string schema)
        {
            ToTable("DashboardOverlay", schema);
            HasKey(x => x.DashboardOverlayId);

            Property(x => x.DashboardOverlayId).HasColumnName(@"DashboardOverlayID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(1000);
            Property(x => x.Startdate).HasColumnName(@"Startdate").HasColumnType("date").IsRequired();
            Property(x => x.Enddate).HasColumnName(@"Enddate").HasColumnType("date").IsRequired();
            Property(x => x.StartDateTime).HasColumnName(@"StartDateTime").HasColumnType("datetime").IsRequired();
            Property(x => x.EndDateTime).HasColumnName(@"EndDateTime").HasColumnType("datetime").IsRequired();
            Property(x => x.Active).HasColumnName(@"Active").HasColumnType("bit").IsRequired();
            Property(x => x.Html).HasColumnName(@"Html").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(8000);
            Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // DashboardOverlayEmail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class DashboardOverlayEmailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DashboardOverlayEmail>
    {
        public DashboardOverlayEmailConfiguration()
            : this("dbo")
        {
        }

        public DashboardOverlayEmailConfiguration(string schema)
        {
            ToTable("DashboardOverlayEmail", schema);
            HasKey(x => x.DashboardOverlayEmailId);

            Property(x => x.DashboardOverlayEmailId).HasColumnName(@"DashboardOverlayEmailID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.DashboardOverlayId).HasColumnName(@"DashboardOverlayID").HasColumnType("int").IsRequired();
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(250);
            Property(x => x.Accept).HasColumnName(@"Accept").HasColumnType("bit").IsOptional();
            Property(x => x.Cancel).HasColumnName(@"Cancel").HasColumnType("bit").IsOptional();
            Property(x => x.Other).HasColumnName(@"Other").HasColumnType("bit").IsOptional();
            Property(x => x.Resolved).HasColumnName(@"Resolved").HasColumnType("bit").IsOptional();
            Property(x => x.ResolvedDate).HasColumnName(@"ResolvedDate").HasColumnType("datetime").IsOptional();
            Property(x => x.ViewedDate).HasColumnName(@"ViewedDate").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.DashboardOverlay).WithMany(b => b.DashboardOverlayEmails).HasForeignKey(c => c.DashboardOverlayId).WillCascadeOnDelete(false); // FK_DashboardOverlayEmail_DashboardOverlayEmail
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // DoiRotatingOffer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class DoiRotatingOfferConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<DoiRotatingOffer>
    {
        public DoiRotatingOfferConfiguration()
            : this("dbo")
        {
        }

        public DoiRotatingOfferConfiguration(string schema)
        {
            ToTable("DoiRotatingOffer", schema);
            HasKey(x => x.DoiRotatingOfferId);

            Property(x => x.DoiRotatingOfferId).HasColumnName(@"DoiRotatingOfferID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SmartEmailLinkConfigId).HasColumnName(@"SmartEmailLinkConfigID").HasColumnType("int").IsRequired();
            Property(x => x.Enabled).HasColumnName(@"Enabled").HasColumnType("bit").IsRequired();
            Property(x => x.Count).HasColumnName(@"Count").HasColumnType("int").IsRequired();
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // EducationCode
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class EducationCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<EducationCode>
    {
        public EducationCodeConfiguration()
            : this("dbo")
        {
        }

        public EducationCodeConfiguration(string schema)
        {
            ToTable("EducationCode", schema);
            HasKey(x => x.EducationCodeId);

            Property(x => x.EducationCodeId).HasColumnName(@"EducationCodeID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Active).HasColumnName(@"Active").HasColumnType("bit").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // forum_ALLOWED_MEMBERS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ForumAllowedMemberConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ForumAllowedMember>
    {
        public ForumAllowedMemberConfiguration()
            : this("dbo")
        {
        }

        public ForumAllowedMemberConfiguration(string schema)
        {
            ToTable("forum_ALLOWED_MEMBERS", schema);
            HasKey(x => new { x.MemberId, x.ForumId });

            Property(x => x.MemberId).HasColumnName(@"MEMBER_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ForumId).HasColumnName(@"FORUM_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // forum_A_REPLY
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ForumAReplyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ForumAReply>
    {
        public ForumAReplyConfiguration()
            : this("dbo")
        {
        }

        public ForumAReplyConfiguration(string schema)
        {
            ToTable("forum_A_REPLY", schema);
            HasKey(x => new { x.CatId, x.ForumId, x.TopicId, x.ReplyId });

            Property(x => x.CatId).HasColumnName(@"CAT_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ForumId).HasColumnName(@"FORUM_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.TopicId).HasColumnName(@"TOPIC_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ReplyId).HasColumnName(@"REPLY_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.RStatus).HasColumnName(@"R_STATUS").HasColumnType("smallint").IsOptional();
            Property(x => x.RMail).HasColumnName(@"R_MAIL").HasColumnType("smallint").IsOptional();
            Property(x => x.RAuthor).HasColumnName(@"R_AUTHOR").HasColumnType("int").IsOptional();
            Property(x => x.RMessage).HasColumnName(@"R_MESSAGE").HasColumnType("ntext").IsOptional().IsMaxLength();
            Property(x => x.RDate).HasColumnName(@"R_DATE").HasColumnType("nvarchar").IsOptional().HasMaxLength(14);
            Property(x => x.RIp).HasColumnName(@"R_IP").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.RLastEdit).HasColumnName(@"R_LAST_EDIT").HasColumnType("nvarchar").IsOptional().HasMaxLength(14);
            Property(x => x.RLastEditby).HasColumnName(@"R_LAST_EDITBY").HasColumnType("int").IsOptional();
            Property(x => x.RSig).HasColumnName(@"R_SIG").HasColumnType("smallint").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // forum_A_TOPICS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ForumATopicConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ForumATopic>
    {
        public ForumATopicConfiguration()
            : this("dbo")
        {
        }

        public ForumATopicConfiguration(string schema)
        {
            ToTable("forum_A_TOPICS", schema);
            HasKey(x => new { x.CatId, x.ForumId, x.TopicId });

            Property(x => x.CatId).HasColumnName(@"CAT_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ForumId).HasColumnName(@"FORUM_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.TopicId).HasColumnName(@"TOPIC_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.TStatus).HasColumnName(@"T_STATUS").HasColumnType("smallint").IsOptional();
            Property(x => x.TMail).HasColumnName(@"T_MAIL").HasColumnType("smallint").IsOptional();
            Property(x => x.TSubject).HasColumnName(@"T_SUBJECT").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.TMessage).HasColumnName(@"T_MESSAGE").HasColumnType("ntext").IsOptional().IsMaxLength();
            Property(x => x.TAuthor).HasColumnName(@"T_AUTHOR").HasColumnType("int").IsOptional();
            Property(x => x.TReplies).HasColumnName(@"T_REPLIES").HasColumnType("int").IsOptional();
            Property(x => x.TUreplies).HasColumnName(@"T_UREPLIES").HasColumnType("int").IsOptional();
            Property(x => x.TViewCount).HasColumnName(@"T_VIEW_COUNT").HasColumnType("int").IsOptional();
            Property(x => x.TLastPost).HasColumnName(@"T_LAST_POST").HasColumnType("nvarchar").IsOptional().HasMaxLength(14);
            Property(x => x.TDate).HasColumnName(@"T_DATE").HasColumnType("nvarchar").IsOptional().HasMaxLength(14);
            Property(x => x.TLastPoster).HasColumnName(@"T_LAST_POSTER").HasColumnType("int").IsOptional();
            Property(x => x.TIp).HasColumnName(@"T_IP").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.TLastPostAuthor).HasColumnName(@"T_LAST_POST_AUTHOR").HasColumnType("int").IsOptional();
            Property(x => x.TLastPostReplyId).HasColumnName(@"T_LAST_POST_REPLY_ID").HasColumnType("int").IsOptional();
            Property(x => x.TArchiveFlag).HasColumnName(@"T_ARCHIVE_FLAG").HasColumnType("int").IsOptional();
            Property(x => x.TLastEdit).HasColumnName(@"T_LAST_EDIT").HasColumnType("nvarchar").IsOptional().HasMaxLength(14);
            Property(x => x.TLastEditby).HasColumnName(@"T_LAST_EDITBY").HasColumnType("int").IsOptional();
            Property(x => x.TSticky).HasColumnName(@"T_STICKY").HasColumnType("smallint").IsOptional();
            Property(x => x.TSig).HasColumnName(@"T_SIG").HasColumnType("smallint").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // forum_BADWORDS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ForumBadwordConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ForumBadword>
    {
        public ForumBadwordConfiguration()
            : this("dbo")
        {
        }

        public ForumBadwordConfiguration(string schema)
        {
            ToTable("forum_BADWORDS", schema);
            HasKey(x => x.BId);

            Property(x => x.BId).HasColumnName(@"B_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.BBadword).HasColumnName(@"B_BADWORD").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.BReplace).HasColumnName(@"B_REPLACE").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // forum_CATEGORY
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ForumCategoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ForumCategory>
    {
        public ForumCategoryConfiguration()
            : this("dbo")
        {
        }

        public ForumCategoryConfiguration(string schema)
        {
            ToTable("forum_CATEGORY", schema);
            HasKey(x => x.CatId);

            Property(x => x.CatId).HasColumnName(@"CAT_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.CatStatus).HasColumnName(@"CAT_STATUS").HasColumnType("smallint").IsOptional();
            Property(x => x.CatName).HasColumnName(@"CAT_NAME").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.CatModeration).HasColumnName(@"CAT_MODERATION").HasColumnType("int").IsOptional();
            Property(x => x.CatSubscription).HasColumnName(@"CAT_SUBSCRIPTION").HasColumnType("int").IsOptional();
            Property(x => x.CatOrder).HasColumnName(@"CAT_ORDER").HasColumnType("int").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // forum_CONFIG_NEW
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ForumConfigNewConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ForumConfigNew>
    {
        public ForumConfigNewConfiguration()
            : this("dbo")
        {
        }

        public ForumConfigNewConfiguration(string schema)
        {
            ToTable("forum_CONFIG_NEW", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.CVariable).HasColumnName(@"C_VARIABLE").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.CValue).HasColumnName(@"C_VALUE").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // forum_FORUM
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ForumForumConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ForumForum>
    {
        public ForumForumConfiguration()
            : this("dbo")
        {
        }

        public ForumForumConfiguration(string schema)
        {
            ToTable("forum_FORUM", schema);
            HasKey(x => new { x.CatId, x.ForumId });

            Property(x => x.CatId).HasColumnName(@"CAT_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ForumId).HasColumnName(@"FORUM_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.FStatus).HasColumnName(@"F_STATUS").HasColumnType("smallint").IsOptional();
            Property(x => x.FMail).HasColumnName(@"F_MAIL").HasColumnType("smallint").IsOptional();
            Property(x => x.FSubject).HasColumnName(@"F_SUBJECT").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.FUrl).HasColumnName(@"F_URL").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.FDescription).HasColumnName(@"F_DESCRIPTION").HasColumnType("ntext").IsOptional().IsMaxLength();
            Property(x => x.FTopics).HasColumnName(@"F_TOPICS").HasColumnType("int").IsOptional();
            Property(x => x.FCount).HasColumnName(@"F_COUNT").HasColumnType("int").IsOptional();
            Property(x => x.FLastPost).HasColumnName(@"F_LAST_POST").HasColumnType("nvarchar").IsOptional().HasMaxLength(14);
            Property(x => x.FPasswordNew).HasColumnName(@"F_PASSWORD_NEW").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.FPrivateforums).HasColumnName(@"F_PRIVATEFORUMS").HasColumnType("int").IsOptional();
            Property(x => x.FType).HasColumnName(@"F_TYPE").HasColumnType("smallint").IsOptional();
            Property(x => x.FIp).HasColumnName(@"F_IP").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.FLastPostAuthor).HasColumnName(@"F_LAST_POST_AUTHOR").HasColumnType("int").IsOptional();
            Property(x => x.FLastPostTopicId).HasColumnName(@"F_LAST_POST_TOPIC_ID").HasColumnType("int").IsOptional();
            Property(x => x.FLastPostReplyId).HasColumnName(@"F_LAST_POST_REPLY_ID").HasColumnType("int").IsOptional();
            Property(x => x.FATopics).HasColumnName(@"F_A_TOPICS").HasColumnType("int").IsOptional();
            Property(x => x.FACount).HasColumnName(@"F_A_COUNT").HasColumnType("int").IsOptional();
            Property(x => x.FDefaultdays).HasColumnName(@"F_DEFAULTDAYS").HasColumnType("int").IsOptional();
            Property(x => x.FCountMPosts).HasColumnName(@"F_COUNT_M_POSTS").HasColumnType("smallint").IsOptional();
            Property(x => x.FModeration).HasColumnName(@"F_MODERATION").HasColumnType("int").IsRequired();
            Property(x => x.FSubscription).HasColumnName(@"F_SUBSCRIPTION").HasColumnType("int").IsRequired();
            Property(x => x.FOrder).HasColumnName(@"F_ORDER").HasColumnType("int").IsRequired();
            Property(x => x.FLArchive).HasColumnName(@"F_L_ARCHIVE").HasColumnType("nvarchar").IsRequired().HasMaxLength(14);
            Property(x => x.FArchiveSched).HasColumnName(@"F_ARCHIVE_SCHED").HasColumnType("int").IsRequired();
            Property(x => x.FLDelete).HasColumnName(@"F_L_DELETE").HasColumnType("nvarchar").IsRequired().HasMaxLength(14);
            Property(x => x.FDeleteSched).HasColumnName(@"F_DELETE_SCHED").HasColumnType("int").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // forum_GROUPS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ForumGroupConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ForumGroup>
    {
        public ForumGroupConfiguration()
            : this("dbo")
        {
        }

        public ForumGroupConfiguration(string schema)
        {
            ToTable("forum_GROUPS", schema);
            HasKey(x => x.GroupKey);

            Property(x => x.GroupKey).HasColumnName(@"GROUP_KEY").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.GroupId).HasColumnName(@"GROUP_ID").HasColumnType("int").IsOptional();
            Property(x => x.GroupCatid).HasColumnName(@"GROUP_CATID").HasColumnType("int").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // forum_GROUP_NAMES
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ForumGroupNameConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ForumGroupName>
    {
        public ForumGroupNameConfiguration()
            : this("dbo")
        {
        }

        public ForumGroupNameConfiguration(string schema)
        {
            ToTable("forum_GROUP_NAMES", schema);
            HasKey(x => x.GroupId);

            Property(x => x.GroupId).HasColumnName(@"GROUP_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.GroupName).HasColumnName(@"GROUP_NAME").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.GroupDescription).HasColumnName(@"GROUP_DESCRIPTION").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.GroupIcon).HasColumnName(@"GROUP_ICON").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.GroupImage).HasColumnName(@"GROUP_IMAGE").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // forum_MEMBERS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ForumMemberConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ForumMember>
    {
        public ForumMemberConfiguration()
            : this("dbo")
        {
        }

        public ForumMemberConfiguration(string schema)
        {
            ToTable("forum_MEMBERS", schema);
            HasKey(x => x.MemberId);

            Property(x => x.MemberId).HasColumnName(@"MEMBER_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.MStatus).HasColumnName(@"M_STATUS").HasColumnType("smallint").IsOptional();
            Property(x => x.MName).HasColumnName(@"M_NAME").HasColumnType("nvarchar").IsOptional().HasMaxLength(75);
            Property(x => x.MUsername).HasColumnName(@"M_USERNAME").HasColumnType("nvarchar").IsOptional().HasMaxLength(150);
            Property(x => x.MPassword).HasColumnName(@"M_PASSWORD").HasColumnType("nvarchar").IsOptional().HasMaxLength(65);
            Property(x => x.MEmail).HasColumnName(@"M_EMAIL").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.MCountry).HasColumnName(@"M_COUNTRY").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.MHomepage).HasColumnName(@"M_HOMEPAGE").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.MSig).HasColumnName(@"M_SIG").HasColumnType("ntext").IsOptional().IsMaxLength();
            Property(x => x.MViewSig).HasColumnName(@"M_VIEW_SIG").HasColumnType("smallint").IsOptional();
            Property(x => x.MSigDefault).HasColumnName(@"M_SIG_DEFAULT").HasColumnType("smallint").IsOptional();
            Property(x => x.MDefaultView).HasColumnName(@"M_DEFAULT_VIEW").HasColumnType("int").IsOptional();
            Property(x => x.MLevel).HasColumnName(@"M_LEVEL").HasColumnType("smallint").IsOptional();
            Property(x => x.MAim).HasColumnName(@"M_AIM").HasColumnType("nvarchar").IsOptional().HasMaxLength(150);
            Property(x => x.MIcq).HasColumnName(@"M_ICQ").HasColumnType("nvarchar").IsOptional().HasMaxLength(150);
            Property(x => x.MMsn).HasColumnName(@"M_MSN").HasColumnType("nvarchar").IsOptional().HasMaxLength(150);
            Property(x => x.MYahoo).HasColumnName(@"M_YAHOO").HasColumnType("nvarchar").IsOptional().HasMaxLength(150);
            Property(x => x.MPosts).HasColumnName(@"M_POSTS").HasColumnType("int").IsOptional();
            Property(x => x.MDate).HasColumnName(@"M_DATE").HasColumnType("nvarchar").IsOptional().HasMaxLength(14);
            Property(x => x.MLastheredate).HasColumnName(@"M_LASTHEREDATE").HasColumnType("nvarchar").IsOptional().HasMaxLength(14);
            Property(x => x.MLastpostdate).HasColumnName(@"M_LASTPOSTDATE").HasColumnType("nvarchar").IsOptional().HasMaxLength(14);
            Property(x => x.MTitle).HasColumnName(@"M_TITLE").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.MSubscription).HasColumnName(@"M_SUBSCRIPTION").HasColumnType("smallint").IsOptional();
            Property(x => x.MHideEmail).HasColumnName(@"M_HIDE_EMAIL").HasColumnType("smallint").IsOptional();
            Property(x => x.MReceiveEmail).HasColumnName(@"M_RECEIVE_EMAIL").HasColumnType("smallint").IsOptional();
            Property(x => x.MLastIp).HasColumnName(@"M_LAST_IP").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.MIp).HasColumnName(@"M_IP").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.MFirstname).HasColumnName(@"M_FIRSTNAME").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.MLastname).HasColumnName(@"M_LASTNAME").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.MOccupation).HasColumnName(@"M_OCCUPATION").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.MSex).HasColumnName(@"M_SEX").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.MAge).HasColumnName(@"M_AGE").HasColumnType("nvarchar").IsOptional().HasMaxLength(10);
            Property(x => x.MDob).HasColumnName(@"M_DOB").HasColumnType("nvarchar").IsOptional().HasMaxLength(8);
            Property(x => x.MHobbies).HasColumnName(@"M_HOBBIES").HasColumnType("ntext").IsOptional().IsMaxLength();
            Property(x => x.MLnews).HasColumnName(@"M_LNEWS").HasColumnType("ntext").IsOptional().IsMaxLength();
            Property(x => x.MQuote).HasColumnName(@"M_QUOTE").HasColumnType("ntext").IsOptional().IsMaxLength();
            Property(x => x.MBio).HasColumnName(@"M_BIO").HasColumnType("ntext").IsOptional().IsMaxLength();
            Property(x => x.MMarstatus).HasColumnName(@"M_MARSTATUS").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.MLink1).HasColumnName(@"M_LINK1").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.MLink2).HasColumnName(@"M_LINK2").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.MCity).HasColumnName(@"M_CITY").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.MState).HasColumnName(@"M_STATE").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.MPhotoUrl).HasColumnName(@"M_PHOTO_URL").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.MKey).HasColumnName(@"M_KEY").HasColumnType("nvarchar").IsOptional().HasMaxLength(32);
            Property(x => x.MNewemail).HasColumnName(@"M_NEWEMAIL").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.MPwkey).HasColumnName(@"M_PWKEY").HasColumnType("nvarchar").IsOptional().HasMaxLength(32);
            Property(x => x.MSha256).HasColumnName(@"M_SHA256").HasColumnType("smallint").IsOptional();
            Property(x => x.MAllowemail).HasColumnName(@"M_ALLOWEMAIL").HasColumnType("smallint").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // forum_MEMBERS_PENDING
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ForumMembersPendingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ForumMembersPending>
    {
        public ForumMembersPendingConfiguration()
            : this("dbo")
        {
        }

        public ForumMembersPendingConfiguration(string schema)
        {
            ToTable("forum_MEMBERS_PENDING", schema);
            HasKey(x => x.MemberId);

            Property(x => x.MemberId).HasColumnName(@"MEMBER_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.MStatus).HasColumnName(@"M_STATUS").HasColumnType("smallint").IsOptional();
            Property(x => x.MName).HasColumnName(@"M_NAME").HasColumnType("nvarchar").IsOptional().HasMaxLength(75);
            Property(x => x.MUsername).HasColumnName(@"M_USERNAME").HasColumnType("nvarchar").IsOptional().HasMaxLength(150);
            Property(x => x.MPassword).HasColumnName(@"M_PASSWORD").HasColumnType("nvarchar").IsOptional().HasMaxLength(65);
            Property(x => x.MEmail).HasColumnName(@"M_EMAIL").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.MCountry).HasColumnName(@"M_COUNTRY").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.MHomepage).HasColumnName(@"M_HOMEPAGE").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.MSig).HasColumnName(@"M_SIG").HasColumnType("ntext").IsOptional().IsMaxLength();
            Property(x => x.MViewSig).HasColumnName(@"M_VIEW_SIG").HasColumnType("smallint").IsOptional();
            Property(x => x.MSigDefault).HasColumnName(@"M_SIG_DEFAULT").HasColumnType("smallint").IsOptional();
            Property(x => x.MDefaultView).HasColumnName(@"M_DEFAULT_VIEW").HasColumnType("int").IsOptional();
            Property(x => x.MLevel).HasColumnName(@"M_LEVEL").HasColumnType("smallint").IsOptional();
            Property(x => x.MAim).HasColumnName(@"M_AIM").HasColumnType("nvarchar").IsOptional().HasMaxLength(150);
            Property(x => x.MIcq).HasColumnName(@"M_ICQ").HasColumnType("nvarchar").IsOptional().HasMaxLength(150);
            Property(x => x.MMsn).HasColumnName(@"M_MSN").HasColumnType("nvarchar").IsOptional().HasMaxLength(150);
            Property(x => x.MYahoo).HasColumnName(@"M_YAHOO").HasColumnType("nvarchar").IsOptional().HasMaxLength(150);
            Property(x => x.MPosts).HasColumnName(@"M_POSTS").HasColumnType("int").IsOptional();
            Property(x => x.MDate).HasColumnName(@"M_DATE").HasColumnType("nvarchar").IsOptional().HasMaxLength(14);
            Property(x => x.MLastheredate).HasColumnName(@"M_LASTHEREDATE").HasColumnType("nvarchar").IsOptional().HasMaxLength(14);
            Property(x => x.MLastpostdate).HasColumnName(@"M_LASTPOSTDATE").HasColumnType("nvarchar").IsOptional().HasMaxLength(14);
            Property(x => x.MTitle).HasColumnName(@"M_TITLE").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.MSubscription).HasColumnName(@"M_SUBSCRIPTION").HasColumnType("smallint").IsOptional();
            Property(x => x.MHideEmail).HasColumnName(@"M_HIDE_EMAIL").HasColumnType("smallint").IsOptional();
            Property(x => x.MReceiveEmail).HasColumnName(@"M_RECEIVE_EMAIL").HasColumnType("smallint").IsOptional();
            Property(x => x.MLastIp).HasColumnName(@"M_LAST_IP").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.MIp).HasColumnName(@"M_IP").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.MFirstname).HasColumnName(@"M_FIRSTNAME").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.MLastname).HasColumnName(@"M_LASTNAME").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.MOccupation).HasColumnName(@"M_OCCUPATION").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.MSex).HasColumnName(@"M_SEX").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.MAge).HasColumnName(@"M_AGE").HasColumnType("nvarchar").IsOptional().HasMaxLength(10);
            Property(x => x.MDob).HasColumnName(@"M_DOB").HasColumnType("nvarchar").IsOptional().HasMaxLength(8);
            Property(x => x.MHobbies).HasColumnName(@"M_HOBBIES").HasColumnType("ntext").IsOptional().IsMaxLength();
            Property(x => x.MLnews).HasColumnName(@"M_LNEWS").HasColumnType("ntext").IsOptional().IsMaxLength();
            Property(x => x.MQuote).HasColumnName(@"M_QUOTE").HasColumnType("ntext").IsOptional().IsMaxLength();
            Property(x => x.MBio).HasColumnName(@"M_BIO").HasColumnType("ntext").IsOptional().IsMaxLength();
            Property(x => x.MMarstatus).HasColumnName(@"M_MARSTATUS").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.MLink1).HasColumnName(@"M_LINK1").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.MLink2).HasColumnName(@"M_LINK2").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.MCity).HasColumnName(@"M_CITY").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.MState).HasColumnName(@"M_STATE").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.MPhotoUrl).HasColumnName(@"M_PHOTO_URL").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.MKey).HasColumnName(@"M_KEY").HasColumnType("nvarchar").IsOptional().HasMaxLength(32);
            Property(x => x.MNewemail).HasColumnName(@"M_NEWEMAIL").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.MPwkey).HasColumnName(@"M_PWKEY").HasColumnType("nvarchar").IsOptional().HasMaxLength(32);
            Property(x => x.MApprove).HasColumnName(@"M_APPROVE").HasColumnType("smallint").IsOptional();
            Property(x => x.MSha256).HasColumnName(@"M_SHA256").HasColumnType("smallint").IsOptional();
            Property(x => x.MAllowemail).HasColumnName(@"M_ALLOWEMAIL").HasColumnType("smallint").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // forum_MODERATOR
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ForumModeratorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ForumModerator>
    {
        public ForumModeratorConfiguration()
            : this("dbo")
        {
        }

        public ForumModeratorConfiguration(string schema)
        {
            ToTable("forum_MODERATOR", schema);
            HasKey(x => x.ModId);

            Property(x => x.ModId).HasColumnName(@"MOD_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ForumId).HasColumnName(@"FORUM_ID").HasColumnType("int").IsOptional();
            Property(x => x.MemberId).HasColumnName(@"MEMBER_ID").HasColumnType("int").IsOptional();
            Property(x => x.ModType).HasColumnName(@"MOD_TYPE").HasColumnType("smallint").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // forum_NAMEFILTER
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ForumNamefilterConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ForumNamefilter>
    {
        public ForumNamefilterConfiguration()
            : this("dbo")
        {
        }

        public ForumNamefilterConfiguration(string schema)
        {
            ToTable("forum_NAMEFILTER", schema);
            HasKey(x => x.NId);

            Property(x => x.NId).HasColumnName(@"N_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NName).HasColumnName(@"N_NAME").HasColumnType("nvarchar").IsOptional().HasMaxLength(75);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // forum_REPLY
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ForumReplyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ForumReply>
    {
        public ForumReplyConfiguration()
            : this("dbo")
        {
        }

        public ForumReplyConfiguration(string schema)
        {
            ToTable("forum_REPLY", schema);
            HasKey(x => new { x.CatId, x.ForumId, x.TopicId, x.ReplyId });

            Property(x => x.CatId).HasColumnName(@"CAT_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ForumId).HasColumnName(@"FORUM_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.TopicId).HasColumnName(@"TOPIC_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ReplyId).HasColumnName(@"REPLY_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RMail).HasColumnName(@"R_MAIL").HasColumnType("smallint").IsOptional();
            Property(x => x.RAuthor).HasColumnName(@"R_AUTHOR").HasColumnType("int").IsOptional();
            Property(x => x.RMessage).HasColumnName(@"R_MESSAGE").HasColumnType("ntext").IsOptional().IsMaxLength();
            Property(x => x.RDate).HasColumnName(@"R_DATE").HasColumnType("nvarchar").IsOptional().HasMaxLength(14);
            Property(x => x.RIp).HasColumnName(@"R_IP").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.RStatus).HasColumnName(@"R_STATUS").HasColumnType("smallint").IsOptional();
            Property(x => x.RLastEdit).HasColumnName(@"R_LAST_EDIT").HasColumnType("nvarchar").IsOptional().HasMaxLength(14);
            Property(x => x.RLastEditby).HasColumnName(@"R_LAST_EDITBY").HasColumnType("int").IsOptional();
            Property(x => x.RSig).HasColumnName(@"R_SIG").HasColumnType("smallint").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // forum_SPAM_MAIL
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ForumSpamMailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ForumSpamMail>
    {
        public ForumSpamMailConfiguration()
            : this("dbo")
        {
        }

        public ForumSpamMailConfiguration(string schema)
        {
            ToTable("forum_SPAM_MAIL", schema);
            HasKey(x => x.SpamId);

            Property(x => x.SpamId).HasColumnName(@"SPAM_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SpamServer).HasColumnName(@"SPAM_SERVER").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // forum_SUBSCRIPTIONS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ForumSubscriptionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ForumSubscription>
    {
        public ForumSubscriptionConfiguration()
            : this("dbo")
        {
        }

        public ForumSubscriptionConfiguration(string schema)
        {
            ToTable("forum_SUBSCRIPTIONS", schema);
            HasKey(x => new { x.SubscriptionId, x.MemberId, x.CatId, x.TopicId, x.ForumId });

            Property(x => x.SubscriptionId).HasColumnName(@"SUBSCRIPTION_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.MemberId).HasColumnName(@"MEMBER_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CatId).HasColumnName(@"CAT_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.TopicId).HasColumnName(@"TOPIC_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ForumId).HasColumnName(@"FORUM_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // forum_TOPICS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ForumTopicConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ForumTopic>
    {
        public ForumTopicConfiguration()
            : this("dbo")
        {
        }

        public ForumTopicConfiguration(string schema)
        {
            ToTable("forum_TOPICS", schema);
            HasKey(x => new { x.CatId, x.ForumId, x.TopicId });

            Property(x => x.CatId).HasColumnName(@"CAT_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ForumId).HasColumnName(@"FORUM_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.TopicId).HasColumnName(@"TOPIC_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.TStatus).HasColumnName(@"T_STATUS").HasColumnType("smallint").IsOptional();
            Property(x => x.TMail).HasColumnName(@"T_MAIL").HasColumnType("smallint").IsOptional();
            Property(x => x.TSubject).HasColumnName(@"T_SUBJECT").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.TMessage).HasColumnName(@"T_MESSAGE").HasColumnType("ntext").IsOptional().IsMaxLength();
            Property(x => x.TAuthor).HasColumnName(@"T_AUTHOR").HasColumnType("int").IsOptional();
            Property(x => x.TReplies).HasColumnName(@"T_REPLIES").HasColumnType("int").IsOptional();
            Property(x => x.TUreplies).HasColumnName(@"T_UREPLIES").HasColumnType("int").IsOptional();
            Property(x => x.TViewCount).HasColumnName(@"T_VIEW_COUNT").HasColumnType("int").IsOptional();
            Property(x => x.TLastPost).HasColumnName(@"T_LAST_POST").HasColumnType("nvarchar").IsOptional().HasMaxLength(14);
            Property(x => x.TDate).HasColumnName(@"T_DATE").HasColumnType("nvarchar").IsOptional().HasMaxLength(14);
            Property(x => x.TLastPoster).HasColumnName(@"T_LAST_POSTER").HasColumnType("int").IsOptional();
            Property(x => x.TIp).HasColumnName(@"T_IP").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.TLastPostAuthor).HasColumnName(@"T_LAST_POST_AUTHOR").HasColumnType("int").IsOptional();
            Property(x => x.TLastPostReplyId).HasColumnName(@"T_LAST_POST_REPLY_ID").HasColumnType("int").IsOptional();
            Property(x => x.TArchiveFlag).HasColumnName(@"T_ARCHIVE_FLAG").HasColumnType("int").IsOptional();
            Property(x => x.TLastEdit).HasColumnName(@"T_LAST_EDIT").HasColumnType("nvarchar").IsOptional().HasMaxLength(14);
            Property(x => x.TLastEditby).HasColumnName(@"T_LAST_EDITBY").HasColumnType("int").IsOptional();
            Property(x => x.TSticky).HasColumnName(@"T_STICKY").HasColumnType("smallint").IsOptional();
            Property(x => x.TSig).HasColumnName(@"T_SIG").HasColumnType("smallint").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // forum_TOTALS
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ForumTotalConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ForumTotal>
    {
        public ForumTotalConfiguration()
            : this("dbo")
        {
        }

        public ForumTotalConfiguration(string schema)
        {
            ToTable("forum_TOTALS", schema);
            HasKey(x => x.CountId);

            Property(x => x.CountId).HasColumnName(@"COUNT_ID").HasColumnType("smallint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.PCount).HasColumnName(@"P_COUNT").HasColumnType("int").IsOptional();
            Property(x => x.PACount).HasColumnName(@"P_A_COUNT").HasColumnType("int").IsOptional();
            Property(x => x.TCount).HasColumnName(@"T_COUNT").HasColumnType("int").IsOptional();
            Property(x => x.TACount).HasColumnName(@"T_A_COUNT").HasColumnType("int").IsOptional();
            Property(x => x.UCount).HasColumnName(@"U_COUNT").HasColumnType("int").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // GeoLiteCity-Blocks
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class GeoLiteCityBlockConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<GeoLiteCityBlock>
    {
        public GeoLiteCityBlockConfiguration()
            : this("dbo")
        {
        }

        public GeoLiteCityBlockConfiguration(string schema)
        {
            ToTable("GeoLiteCity-Blocks", schema);
            HasKey(x => new { x.StartIpNum, x.EndIpNum, x.LocId });

            Property(x => x.StartIpNum).HasColumnName(@"startIpNum").HasColumnType("numeric").IsRequired().HasPrecision(18,0).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EndIpNum).HasColumnName(@"endIpNum").HasColumnType("numeric").IsRequired().HasPrecision(18,0).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.LocId).HasColumnName(@"locId").HasColumnType("numeric").IsRequired().HasPrecision(18,0).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // GeoLiteCity-Location
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class GeoLiteCityLocationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<GeoLiteCityLocation>
    {
        public GeoLiteCityLocationConfiguration()
            : this("dbo")
        {
        }

        public GeoLiteCityLocationConfiguration(string schema)
        {
            ToTable("GeoLiteCity-Location", schema);
            HasKey(x => x.LocId);

            Property(x => x.LocId).HasColumnName(@"locId").HasColumnType("numeric").IsRequired().HasPrecision(18,0).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Country).HasColumnName(@"country").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.Region).HasColumnName(@"region").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.City).HasColumnName(@"city").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.PostalCode).HasColumnName(@"postalCode").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.Latitude).HasColumnName(@"latitude").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.Longitude).HasColumnName(@"longitude").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.MetroCode).HasColumnName(@"metroCode").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.AreaCode).HasColumnName(@"areaCode").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // InstructionBullet
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class InstructionBulletConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InstructionBullet>
    {
        public InstructionBulletConfiguration()
            : this("dbo")
        {
        }

        public InstructionBulletConfiguration(string schema)
        {
            ToTable("InstructionBullet", schema);
            HasKey(x => x.InstructionBulletId);

            Property(x => x.InstructionBulletId).HasColumnName(@"InstructionBulletID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InstructionId).HasColumnName(@"InstructionID").HasColumnType("int").IsRequired();
            Property(x => x.Text).HasColumnName(@"Text").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2000);
            Property(x => x.Sequence).HasColumnName(@"Sequence").HasColumnType("int").IsRequired();
            Property(x => x.BulletType).HasColumnName(@"BulletType").HasColumnType("int").IsRequired();
            Property(x => x.Active).HasColumnName(@"Active").HasColumnType("bit").IsRequired();

            // Foreign keys
            HasRequired(a => a.CbrSurveyInstruction).WithMany(b => b.InstructionBullets).HasForeignKey(c => c.InstructionId).WillCascadeOnDelete(false); // FK_InstructionBullet_CBRSurveyInstruction
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // IPCountry
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class IpCountryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<IpCountry>
    {
        public IpCountryConfiguration()
            : this("dbo")
        {
        }

        public IpCountryConfiguration(string schema)
        {
            ToTable("IPCountry", schema);
            HasKey(x => new { x.StartIp, x.EndIp, x.StartNum, x.EndNum, x.CountryId, x.CountryName });

            Property(x => x.StartIp).HasColumnName(@"StartIP").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(15).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EndIp).HasColumnName(@"EndIP").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(15).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.StartNum).HasColumnName(@"StartNum").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EndNum).HasColumnName(@"EndNum").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CountryName).HasColumnName(@"CountryName").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // IPCountryNew
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class IpCountryNewConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<IpCountryNew>
    {
        public IpCountryNewConfiguration()
            : this("dbo")
        {
        }

        public IpCountryNewConfiguration(string schema)
        {
            ToTable("IPCountryNew", schema);
            HasKey(x => new { x.StartIp, x.EndIp, x.StartNum, x.EndNum, x.CountryId, x.CountryName });

            Property(x => x.StartIp).HasColumnName(@"StartIP").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(15).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EndIp).HasColumnName(@"EndIP").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(15).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.StartNum).HasColumnName(@"StartNum").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EndNum).HasColumnName(@"EndNum").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CountryName).HasColumnName(@"CountryName").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // IPCountryOld
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class IpCountryOldConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<IpCountryOld>
    {
        public IpCountryOldConfiguration()
            : this("dbo")
        {
        }

        public IpCountryOldConfiguration(string schema)
        {
            ToTable("IPCountryOld", schema);
            HasKey(x => new { x.StartIp, x.EndIp, x.StartNum, x.EndNum, x.CountryId, x.CountryName });

            Property(x => x.StartIp).HasColumnName(@"StartIP").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(15).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EndIp).HasColumnName(@"EndIP").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(15).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.StartNum).HasColumnName(@"StartNum").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EndNum).HasColumnName(@"EndNum").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CountryName).HasColumnName(@"CountryName").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // IPCountyNewBackup
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class IpCountyNewBackupConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<IpCountyNewBackup>
    {
        public IpCountyNewBackupConfiguration()
            : this("dbo")
        {
        }

        public IpCountyNewBackupConfiguration(string schema)
        {
            ToTable("IPCountyNewBackup", schema);
            HasKey(x => new { x.StartIp, x.EndIp, x.StartNum, x.EndNum, x.CountryId, x.CountryName });

            Property(x => x.StartIp).HasColumnName(@"StartIP").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(15).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EndIp).HasColumnName(@"EndIP").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(15).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.StartNum).HasColumnName(@"StartNum").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EndNum).HasColumnName(@"EndNum").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CountryName).HasColumnName(@"CountryName").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // IpLog
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class IpLogConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<IpLog>
    {
        public IpLogConfiguration()
            : this("dbo")
        {
        }

        public IpLogConfiguration(string schema)
        {
            ToTable("IpLog", schema);
            HasKey(x => x.IpLogId);

            Property(x => x.IpLogId).HasColumnName(@"IpLogID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IpAddress).HasColumnName(@"IpAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // JobData
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class JobDataConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<JobData>
    {
        public JobDataConfiguration()
            : this("dbo")
        {
        }

        public JobDataConfiguration(string schema)
        {
            ToTable("JobData", schema);
            HasKey(x => x.JobDataId);

            Property(x => x.JobDataId).HasColumnName(@"JobDataID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.St).HasColumnName(@"ST").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2);
            Property(x => x.State).HasColumnName(@"STATE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.OccCode).HasColumnName(@"OCC_CODE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.OccTitle).HasColumnName(@"OCC_TITLE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.AMean).HasColumnName(@"A_MEAN").HasColumnType("float").IsOptional();
            Property(x => x.AMedian).HasColumnName(@"A_MEDIAN").HasColumnType("float").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Language
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class LanguageConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Language>
    {
        public LanguageConfiguration()
            : this("dbo")
        {
        }

        public LanguageConfiguration(string schema)
        {
            ToTable("Language", schema);
            HasKey(x => new { x.LanguageId, x.Name });

            Property(x => x.LanguageId).HasColumnName(@"LanguageID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // LeadReversal
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class LeadReversalConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LeadReversal>
    {
        public LeadReversalConfiguration()
            : this("dbo")
        {
        }

        public LeadReversalConfiguration(string schema)
        {
            ToTable("LeadReversal", schema);
            HasKey(x => x.AutoId);

            Property(x => x.AutoId).HasColumnName(@"AutoID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.AffiliateId).HasColumnName(@"AffiliateID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.OfferId).HasColumnName(@"OfferID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.SubId).HasColumnName(@"SubID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CostPerLead).HasColumnName(@"CostPerLead").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.NumberOfLeads).HasColumnName(@"NumberOfLeads").HasColumnType("int").IsRequired();
            Property(x => x.Comment).HasColumnName(@"Comment").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.EffectiveDate).HasColumnName(@"EffectiveDate").HasColumnType("datetime").IsRequired();
            Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // LoggedInFromClik
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class LoggedInFromClikConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<LoggedInFromClik>
    {
        public LoggedInFromClikConfiguration()
            : this("dbo")
        {
        }

        public LoggedInFromClikConfiguration(string schema)
        {
            ToTable("LoggedInFromClik", schema);
            HasKey(x => x.LoggedInFromClikId);

            Property(x => x.LoggedInFromClikId).HasColumnName(@"LoggedInFromClikID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(250);
            Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Occupation
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class OccupationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Occupation>
    {
        public OccupationConfiguration()
            : this("dbo")
        {
        }

        public OccupationConfiguration(string schema)
        {
            ToTable("Occupation", schema);
            HasKey(x => x.OccupationId);

            Property(x => x.OccupationId).HasColumnName(@"OccupationID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Title).HasColumnName(@"Title").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(250);
            Property(x => x.OccupationCode).HasColumnName(@"OccupationCode").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.OccupationSectorId).HasColumnName(@"OccupationSectorID").HasColumnType("int").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // OccupationEducation
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class OccupationEducationConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OccupationEducation>
    {
        public OccupationEducationConfiguration()
            : this("dbo")
        {
        }

        public OccupationEducationConfiguration(string schema)
        {
            ToTable("OccupationEducation", schema);
            HasKey(x => x.OccupationEducationId);

            Property(x => x.OccupationEducationId).HasColumnName(@"OccupationEducationID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Title).HasColumnName(@"Title").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(250);
            Property(x => x.OccupationCode).HasColumnName(@"OccupationCode").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Education).HasColumnName(@"Education").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.EducationCodeId).HasColumnName(@"EducationCodeID").HasColumnType("int").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // OccupationIncome
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class OccupationIncomeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OccupationIncome>
    {
        public OccupationIncomeConfiguration()
            : this("dbo")
        {
        }

        public OccupationIncomeConfiguration(string schema)
        {
            ToTable("OccupationIncome", schema);
            HasKey(x => x.OccupationIncome_);

            Property(x => x.OccupationIncome_).HasColumnName(@"OccupationIncome").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.St).HasColumnName(@"ST").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2);
            Property(x => x.State).HasColumnName(@"STATE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.OccCode).HasColumnName(@"OCC_CODE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.OccTitle).HasColumnName(@"OCC_TITLE").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.AMean).HasColumnName(@"A_MEAN").HasColumnType("float").IsOptional();
            Property(x => x.AMedian).HasColumnName(@"A_MEDIAN").HasColumnType("float").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // OccupationSector
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class OccupationSectorConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OccupationSector>
    {
        public OccupationSectorConfiguration()
            : this("dbo")
        {
        }

        public OccupationSectorConfiguration(string schema)
        {
            ToTable("OccupationSector", schema);
            HasKey(x => x.OccupationSectorId);

            Property(x => x.OccupationSectorId).HasColumnName(@"OccupationSectorID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Active).HasColumnName(@"Active").HasColumnType("bit").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Offer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class OfferConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Offer>
    {
        public OfferConfiguration()
            : this("dbo")
        {
        }

        public OfferConfiguration(string schema)
        {
            ToTable("Offer", schema);
            HasKey(x => new { x.OfferId, x.Type });

            Property(x => x.OfferId).HasColumnName(@"OfferID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Abbreviation).HasColumnName(@"Abbreviation").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(10);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2);
            Property(x => x.LanguageId).HasColumnName(@"LanguageID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Type).HasColumnName(@"Type").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // OptInEmailLog
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class OptInEmailLogConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OptInEmailLog>
    {
        public OptInEmailLogConfiguration()
            : this("dbo")
        {
        }

        public OptInEmailLogConfiguration(string schema)
        {
            ToTable("OptInEmailLog", schema);
            HasKey(x => new { x.EmailId, x.CountryId, x.LanguageId, x.EmailAddress, x.SendOnDay, x.DateSent });

            Property(x => x.EmailId).HasColumnName(@"EmailID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.LanguageId).HasColumnName(@"LanguageID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SendOnDay).HasColumnName(@"SendOnDay").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateSent).HasColumnName(@"DateSent").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // OptInEmailVerbage
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class OptInEmailVerbageConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OptInEmailVerbage>
    {
        public OptInEmailVerbageConfiguration()
            : this("dbo")
        {
        }

        public OptInEmailVerbageConfiguration(string schema)
        {
            ToTable("OptInEmailVerbage", schema);
            HasKey(x => new { x.EmailId, x.LanguageId, x.OfferId });

            Property(x => x.EmailId).HasColumnName(@"EmailID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.LanguageId).HasColumnName(@"LanguageID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OfferId).HasColumnName(@"OfferID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.FromName).HasColumnName(@"FromName").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.FromAddress).HasColumnName(@"FromAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Subject).HasColumnName(@"Subject").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Body).HasColumnName(@"Body").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(8000);
            Property(x => x.HtmlBody).HasColumnName(@"HTMLBody").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(8000);
            Property(x => x.SendOnDay).HasColumnName(@"SendOnDay").HasColumnType("int").IsRequired();
            Property(x => x.Enabled).HasColumnName(@"Enabled").HasColumnType("bit").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // OptInEmailVerbageListrakQueue
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class OptInEmailVerbageListrakQueueConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OptInEmailVerbageListrakQueue>
    {
        public OptInEmailVerbageListrakQueueConfiguration()
            : this("dbo")
        {
        }

        public OptInEmailVerbageListrakQueueConfiguration(string schema)
        {
            ToTable("OptInEmailVerbageListrakQueue", schema);
            HasKey(x => new { x.OfferId, x.SendOnDay });

            Property(x => x.OfferId).HasColumnName(@"OfferID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SendOnDay).HasColumnName(@"SendOnDay").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // OptInEmailVerbageTestSend
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class OptInEmailVerbageTestSendConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OptInEmailVerbageTestSend>
    {
        public OptInEmailVerbageTestSendConfiguration()
            : this("dbo")
        {
        }

        public OptInEmailVerbageTestSendConfiguration(string schema)
        {
            ToTable("OptInEmailVerbageTestSend", schema);
            HasKey(x => new { x.EmailId, x.EmailAddress, x.OfferId, x.SubId, x.AffiliateId, x.Name, x.Ip, x.InsertDate });

            Property(x => x.EmailId).HasColumnName(@"EmailID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OfferId).HasColumnName(@"OfferID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SubId).HasColumnName(@"SubID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AffiliateId).HasColumnName(@"AffiliateID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Ip).HasColumnName(@"IP").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // OptInLead
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class OptInLeadConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OptInLead>
    {
        public OptInLeadConfiguration()
            : this("dbo")
        {
        }

        public OptInLeadConfiguration(string schema)
        {
            ToTable("OptInLead", schema);
            HasKey(x => x.EmailAddress);

            Property(x => x.SiteVertical).HasColumnName(@"SiteVertical").HasColumnType("int").IsRequired();
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Salutation).HasColumnName(@"Salutation").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Firstname).HasColumnName(@"Firstname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Lastname).HasColumnName(@"Lastname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Address2).HasColumnName(@"Address2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.City).HasColumnName(@"City").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.State).HasColumnName(@"State").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Zip).HasColumnName(@"Zip").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Phone).HasColumnName(@"Phone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Mobilephone).HasColumnName(@"Mobilephone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.SmartPhone).HasColumnName(@"SmartPhone").HasColumnType("bit").IsOptional();
            Property(x => x.BirthdayDay).HasColumnName(@"BirthdayDay").HasColumnType("int").IsOptional();
            Property(x => x.BirthdayMonth).HasColumnName(@"BirthdayMonth").HasColumnType("int").IsOptional();
            Property(x => x.BirthdayYear).HasColumnName(@"BirthdayYear").HasColumnType("int").IsOptional();
            Property(x => x.Gender).HasColumnName(@"Gender").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1);
            Property(x => x.Occupation).HasColumnName(@"Occupation").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Income).HasColumnName(@"Income").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.HomeOwnership).HasColumnName(@"HomeOwnership").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Education).HasColumnName(@"Education").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.MaritalStatus).HasColumnName(@"MaritalStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Children).HasColumnName(@"Children").HasColumnType("int").IsOptional();
            Property(x => x.Ethnicity).HasColumnName(@"Ethnicity").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Password).HasColumnName(@"Password").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.OfferId).HasColumnName(@"OfferID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.AffiliateId).HasColumnName(@"AffiliateID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.SubId).HasColumnName(@"SubID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Cost).HasColumnName(@"Cost").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2);
            Property(x => x.SelectedLanguageId).HasColumnName(@"SelectedLanguageID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2);
            Property(x => x.OptInDate).HasColumnName(@"OptInDate").HasColumnType("datetime").IsRequired();
            Property(x => x.LastRunDate).HasColumnName(@"LastRunDate").HasColumnType("datetime").IsRequired();
            Property(x => x.LastSendOnDay).HasColumnName(@"LastSendOnDay").HasColumnType("int").IsRequired();
            Property(x => x.OptOutDate).HasColumnName(@"OptOutDate").HasColumnType("datetime").IsOptional();
            Property(x => x.DoNotSendTo).HasColumnName(@"DoNotSendTo").HasColumnType("bit").IsRequired();
            Property(x => x.ConfirmedDate).HasColumnName(@"ConfirmedDate").HasColumnType("datetime").IsOptional();
            Property(x => x.ThirdPartyListsUpdated).HasColumnName(@"ThirdPartyListsUpdated").HasColumnType("bit").IsRequired();
            Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired();
            Property(x => x.Ip).HasColumnName(@"IP").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.Uid).HasColumnName(@"UID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Clik).HasColumnName(@"Clik").HasColumnType("bit").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // OptInLeadBackup
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class OptInLeadBackupConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OptInLeadBackup>
    {
        public OptInLeadBackupConfiguration()
            : this("dbo")
        {
        }

        public OptInLeadBackupConfiguration(string schema)
        {
            ToTable("OptInLeadBackup", schema);
            HasKey(x => new { x.SiteVertical, x.EmailAddress, x.CountryId, x.SelectedLanguageId, x.OptInDate, x.LastRunDate, x.LastSendOnDay, x.DoNotSendTo, x.ThirdPartyListsUpdated, x.InsertDate });

            Property(x => x.SiteVertical).HasColumnName(@"SiteVertical").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Salutation).HasColumnName(@"Salutation").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Firstname).HasColumnName(@"Firstname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Lastname).HasColumnName(@"Lastname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Address2).HasColumnName(@"Address2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.City).HasColumnName(@"City").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.State).HasColumnName(@"State").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Zip).HasColumnName(@"Zip").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Phone).HasColumnName(@"Phone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Mobilephone).HasColumnName(@"Mobilephone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.SmartPhone).HasColumnName(@"SmartPhone").HasColumnType("bit").IsOptional();
            Property(x => x.BirthdayDay).HasColumnName(@"BirthdayDay").HasColumnType("int").IsOptional();
            Property(x => x.BirthdayMonth).HasColumnName(@"BirthdayMonth").HasColumnType("int").IsOptional();
            Property(x => x.BirthdayYear).HasColumnName(@"BirthdayYear").HasColumnType("int").IsOptional();
            Property(x => x.Gender).HasColumnName(@"Gender").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1);
            Property(x => x.Occupation).HasColumnName(@"Occupation").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Income).HasColumnName(@"Income").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.HomeOwnership).HasColumnName(@"HomeOwnership").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Education).HasColumnName(@"Education").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.MaritalStatus).HasColumnName(@"MaritalStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Children).HasColumnName(@"Children").HasColumnType("int").IsOptional();
            Property(x => x.Ethnicity).HasColumnName(@"Ethnicity").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Password).HasColumnName(@"Password").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.OfferId).HasColumnName(@"OfferID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.AffiliateId).HasColumnName(@"AffiliateID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.SubId).HasColumnName(@"SubID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Cost).HasColumnName(@"Cost").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SelectedLanguageId).HasColumnName(@"SelectedLanguageID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OptInDate).HasColumnName(@"OptInDate").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.LastRunDate).HasColumnName(@"LastRunDate").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.LastSendOnDay).HasColumnName(@"LastSendOnDay").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OptOutDate).HasColumnName(@"OptOutDate").HasColumnType("datetime").IsOptional();
            Property(x => x.DoNotSendTo).HasColumnName(@"DoNotSendTo").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ConfirmedDate).HasColumnName(@"ConfirmedDate").HasColumnType("datetime").IsOptional();
            Property(x => x.ThirdPartyListsUpdated).HasColumnName(@"ThirdPartyListsUpdated").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Ip).HasColumnName(@"IP").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.Uid).HasColumnName(@"UID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Clik).HasColumnName(@"Clik").HasColumnType("bit").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // PostQueue
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class PostQueueConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PostQueue>
    {
        public PostQueueConfiguration()
            : this("dbo")
        {
        }

        public PostQueueConfiguration(string schema)
        {
            ToTable("PostQueue", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.CoregId).HasColumnName(@"CoregID").HasColumnType("int").IsRequired();
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Method).HasColumnName(@"Method").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(4);
            Property(x => x.PostUrl).HasColumnName(@"PostURL").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(500);
            Property(x => x.PostData).HasColumnName(@"PostData").HasColumnType("varchar(max)").IsRequired().IsUnicode(false);
            Property(x => x.OkValue).HasColumnName(@"OKValue").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.IgnoreValues).HasColumnName(@"IgnoreValues").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.Status).HasColumnName(@"Status").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ReturnString).HasColumnName(@"ReturnString").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.ProcessedDate).HasColumnName(@"ProcessedDate").HasColumnType("datetime").IsOptional();
            Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // PQ_ToBeDeleted
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class PqToBeDeletedConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PqToBeDeleted>
    {
        public PqToBeDeletedConfiguration()
            : this("dbo")
        {
        }

        public PqToBeDeletedConfiguration(string schema)
        {
            ToTable("PQ_ToBeDeleted", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ProcessedDate).HasColumnName(@"ProcessedDate").HasColumnType("datetime").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ProcessedSurveyIDs
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ProcessedSurveyIdConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ProcessedSurveyId>
    {
        public ProcessedSurveyIdConfiguration()
            : this("dbo")
        {
        }

        public ProcessedSurveyIdConfiguration(string schema)
        {
            ToTable("ProcessedSurveyIDs", schema);
            HasKey(x => new { x.SurveyId, x.OldId });

            Property(x => x.SurveyId).HasColumnName(@"SurveyID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OldId).HasColumnName(@"OldID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ProregAdvertiser
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ProregAdvertiserConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ProregAdvertiser>
    {
        public ProregAdvertiserConfiguration()
            : this("dbo")
        {
        }

        public ProregAdvertiserConfiguration(string schema)
        {
            ToTable("ProregAdvertiser", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.PostUrl).HasColumnName(@"PostURL").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.OkStatus).HasColumnName(@"OKStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ProregAdvertiserFieldXref
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ProregAdvertiserFieldXrefConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ProregAdvertiserFieldXref>
    {
        public ProregAdvertiserFieldXrefConfiguration()
            : this("dbo")
        {
        }

        public ProregAdvertiserFieldXrefConfiguration(string schema)
        {
            ToTable("ProregAdvertiserFieldXref", schema);
            HasKey(x => new { x.AdvId, x.FieldId });

            Property(x => x.AdvId).HasColumnName(@"AdvID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.FieldId).HasColumnName(@"FieldID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AdvFieldName).HasColumnName(@"AdvFieldName").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ProregFields
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ProregFieldConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ProregField>
    {
        public ProregFieldConfiguration()
            : this("dbo")
        {
        }

        public ProregFieldConfiguration(string schema)
        {
            ToTable("ProregFields", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ProregLeadSent
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ProregLeadSentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ProregLeadSent>
    {
        public ProregLeadSentConfiguration()
            : this("dbo")
        {
        }

        public ProregLeadSentConfiguration(string schema)
        {
            ToTable("ProregLeadSent", schema);
            HasKey(x => new { x.EmailAddress, x.OfferId, x.DateSent });

            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OfferId).HasColumnName(@"OfferID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateSent).HasColumnName(@"DateSent").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ProregOffer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ProregOfferConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ProregOffer>
    {
        public ProregOfferConfiguration()
            : this("dbo")
        {
        }

        public ProregOfferConfiguration(string schema)
        {
            ToTable("ProregOffer", schema);
            HasKey(x => new { x.Id, x.AdvId });

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AdvId).HasColumnName(@"AdvID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Copy).HasColumnName(@"Copy").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
            Property(x => x.AdditionalPostInfo).HasColumnName(@"AdditionalPostInfo").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.ImageUrl).HasColumnName(@"ImageURL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Cap).HasColumnName(@"Cap").HasColumnType("int").IsRequired();
            Property(x => x.Priority).HasColumnName(@"Priority").HasColumnType("int").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ProregOfferReqFields
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ProregOfferReqFieldConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ProregOfferReqField>
    {
        public ProregOfferReqFieldConfiguration()
            : this("dbo")
        {
        }

        public ProregOfferReqFieldConfiguration(string schema)
        {
            ToTable("ProregOfferReqFields", schema);
            HasKey(x => new { x.OfferId, x.FieldId });

            Property(x => x.OfferId).HasColumnName(@"OfferID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.FieldId).HasColumnName(@"FieldID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ProregOfferTarget
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ProregOfferTargetConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ProregOfferTarget>
    {
        public ProregOfferTargetConfiguration()
            : this("dbo")
        {
        }

        public ProregOfferTargetConfiguration(string schema)
        {
            ToTable("ProregOfferTarget", schema);
            HasKey(x => new { x.OfferId, x.QuestionId });

            Property(x => x.OfferId).HasColumnName(@"OfferID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.QuestionId).HasColumnName(@"QuestionID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Operator).HasColumnName(@"Operator").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Value).HasColumnName(@"Value").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.RequiredForInclusion).HasColumnName(@"RequiredForInclusion").HasColumnType("bit").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Referral
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ReferralConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Referral>
    {
        public ReferralConfiguration()
            : this("dbo")
        {
        }

        public ReferralConfiguration(string schema)
        {
            ToTable("Referral", schema);
            HasKey(x => new { x.ReferredEmailAddress, x.OfferId });

            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.ReferredEmailAddress).HasColumnName(@"ReferredEmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OfferId).HasColumnName(@"OfferID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(100).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EmailMessage).HasColumnName(@"EmailMessage").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.ReferralConversionDate).HasColumnName(@"ReferralConversionDate").HasColumnType("datetime").IsOptional();
            Property(x => x.ReferralDate).HasColumnName(@"ReferralDate").HasColumnType("datetime").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ReUploadElabs
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ReUploadElabConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ReUploadElab>
    {
        public ReUploadElabConfiguration()
            : this("dbo")
        {
        }

        public ReUploadElabConfiguration(string schema)
        {
            ToTable("ReUploadElabs", schema);
            HasKey(x => x.LastProcessedDate);

            Property(x => x.LastProcessedDate).HasColumnName(@"LastProcessedDate").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ScrubLead
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ScrubLeadConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ScrubLead>
    {
        public ScrubLeadConfiguration()
            : this("dbo")
        {
        }

        public ScrubLeadConfiguration(string schema)
        {
            ToTable("ScrubLead", schema);
            HasKey(x => new { x.Id, x.EmailAddress, x.CountryId, x.SelectedLanguageId, x.InsertDate });

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Salutation).HasColumnName(@"Salutation").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Firstname).HasColumnName(@"Firstname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Lastname).HasColumnName(@"Lastname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Address2).HasColumnName(@"Address2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.City).HasColumnName(@"City").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.State).HasColumnName(@"State").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Zip).HasColumnName(@"Zip").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Phone).HasColumnName(@"Phone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Mobilephone).HasColumnName(@"Mobilephone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.BirthdayDay).HasColumnName(@"BirthdayDay").HasColumnType("int").IsOptional();
            Property(x => x.BirthdayMonth).HasColumnName(@"BirthdayMonth").HasColumnType("int").IsOptional();
            Property(x => x.BirthdayYear).HasColumnName(@"BirthdayYear").HasColumnType("int").IsOptional();
            Property(x => x.Cost).HasColumnName(@"Cost").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.OfferId).HasColumnName(@"OfferID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.AffiliateId).HasColumnName(@"AffiliateID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.SubId).HasColumnName(@"SubID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SelectedLanguageId).HasColumnName(@"SelectedLanguageID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Ip).HasColumnName(@"IP").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ScrubReportConfig
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class ScrubReportConfigConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ScrubReportConfig>
    {
        public ScrubReportConfigConfiguration()
            : this("dbo")
        {
        }

        public ScrubReportConfigConfiguration(string schema)
        {
            ToTable("ScrubReportConfig", schema);
            HasKey(x => x.AffiliateId);

            Property(x => x.AffiliateId).HasColumnName(@"AffiliateID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Columns).HasColumnName(@"Columns").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(500);
            Property(x => x.Delimiter).HasColumnName(@"Delimiter").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(3);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SiteBlacklist
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class SiteBlacklistConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SiteBlacklist>
    {
        public SiteBlacklistConfiguration()
            : this("dbo")
        {
        }

        public SiteBlacklistConfiguration(string schema)
        {
            ToTable("SiteBlacklist", schema);
            HasKey(x => new { x.EmailAddress, x.OfferId });

            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OfferId).HasColumnName(@"OfferID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.PageVerbiage).HasColumnName(@"PageVerbiage").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(511);
            Property(x => x.RedirTimeout).HasColumnName(@"RedirTimeout").HasColumnType("int").IsRequired();
            Property(x => x.RedirUrl).HasColumnName(@"RedirURL").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SiteBlacklistIpAddress
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class SiteBlacklistIpAddressConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SiteBlacklistIpAddress>
    {
        public SiteBlacklistIpAddressConfiguration()
            : this("dbo")
        {
        }

        public SiteBlacklistIpAddressConfiguration(string schema)
        {
            ToTable("SiteBlacklistIpAddress", schema);
            HasKey(x => new { x.Id, x.IpAddress, x.RedirTimeout, x.RedirUrl });

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IpAddress).HasColumnName(@"IpAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.PageVerbiage).HasColumnName(@"PageVerbiage").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(511);
            Property(x => x.RedirTimeout).HasColumnName(@"RedirTimeout").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.RedirUrl).HasColumnName(@"RedirURL").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SmartEmailLinkClick
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class SmartEmailLinkClickConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SmartEmailLinkClick>
    {
        public SmartEmailLinkClickConfiguration()
            : this("dbo")
        {
        }

        public SmartEmailLinkClickConfiguration(string schema)
        {
            ToTable("SmartEmailLinkClick", schema);
            HasKey(x => new { x.Id, x.EmailAddress });

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateClicked).HasColumnName(@"DateClicked").HasColumnType("datetime").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SmartEmailLinkConfig
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class SmartEmailLinkConfigConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SmartEmailLinkConfig>
    {
        public SmartEmailLinkConfigConfiguration()
            : this("dbo")
        {
        }

        public SmartEmailLinkConfigConfiguration(string schema)
        {
            ToTable("SmartEmailLinkConfig", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AffiliateCampaignName).HasColumnName(@"AffiliateCampaignName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.ImageUrl).HasColumnName(@"ImageURL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(400);
            Property(x => x.ExitUrl).HasColumnName(@"ExitURL").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(400);
            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Priority).HasColumnName(@"Priority").HasColumnType("int").IsRequired();
            Property(x => x.Desirability).HasColumnName(@"Desirability").HasColumnType("float").IsRequired();
            Property(x => x.Cpa).HasColumnName(@"CPA").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.Cap).HasColumnName(@"Cap").HasColumnType("int").IsRequired();
            Property(x => x.CpcOffer).HasColumnName(@"CPCOffer").HasColumnType("bit").IsRequired();
            Property(x => x.SendCookieId).HasColumnName(@"SendCookieID").HasColumnType("bit").IsRequired();
            Property(x => x.SurveyPanel).HasColumnName(@"SurveyPanel").HasColumnType("int").IsRequired();
            Property(x => x.Enabled).HasColumnName(@"Enabled").HasColumnType("bit").IsRequired();
            Property(x => x.ClinicalTrial).HasColumnName(@"ClinicalTrial").HasColumnType("int").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SmartEmailLinkFields
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class SmartEmailLinkFieldConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SmartEmailLinkField>
    {
        public SmartEmailLinkFieldConfiguration()
            : this("dbo")
        {
        }

        public SmartEmailLinkFieldConfiguration(string schema)
        {
            ToTable("SmartEmailLinkFields", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SmartEmailLinkTarget
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class SmartEmailLinkTargetConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SmartEmailLinkTarget>
    {
        public SmartEmailLinkTargetConfiguration()
            : this("dbo")
        {
        }

        public SmartEmailLinkTargetConfiguration(string schema)
        {
            ToTable("SmartEmailLinkTarget", schema);
            HasKey(x => new { x.Id, x.LinkId, x.QuestionId });

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.LinkId).HasColumnName(@"LinkID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.QuestionId).HasColumnName(@"QuestionID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Operator).HasColumnName(@"Operator").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Value).HasColumnName(@"Value").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.RequiredForInclusion).HasColumnName(@"RequiredForInclusion").HasColumnType("bit").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SmartExitLinkConfig
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class SmartExitLinkConfigConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SmartExitLinkConfig>
    {
        public SmartExitLinkConfigConfiguration()
            : this("dbo")
        {
        }

        public SmartExitLinkConfigConfiguration(string schema)
        {
            ToTable("SmartExitLinkConfig", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.AffiliateCampaignName).HasColumnName(@"AffiliateCampaignName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.ImageUrl).HasColumnName(@"ImageURL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(400);
            Property(x => x.ExitUrl).HasColumnName(@"ExitURL").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(400);
            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Priority).HasColumnName(@"Priority").HasColumnType("int").IsRequired();
            Property(x => x.Desirability).HasColumnName(@"Desirability").HasColumnType("float").IsRequired();
            Property(x => x.Cpa).HasColumnName(@"CPA").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.Cap).HasColumnName(@"Cap").HasColumnType("int").IsRequired();
            Property(x => x.CpcOffer).HasColumnName(@"CPCOffer").HasColumnType("bit").IsRequired();
            Property(x => x.SendCookieId).HasColumnName(@"SendCookieID").HasColumnType("bit").IsRequired();
            Property(x => x.SurveyPanel).HasColumnName(@"SurveyPanel").HasColumnType("int").IsRequired();
            Property(x => x.Enabled).HasColumnName(@"Enabled").HasColumnType("bit").IsRequired();
            Property(x => x.ClinicalTrial).HasColumnName(@"ClinicalTrial").HasColumnType("int").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SmartExitLinkFields
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class SmartExitLinkFieldConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SmartExitLinkField>
    {
        public SmartExitLinkFieldConfiguration()
            : this("dbo")
        {
        }

        public SmartExitLinkFieldConfiguration(string schema)
        {
            ToTable("SmartExitLinkFields", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SmartExitLinkTarget
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class SmartExitLinkTargetConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SmartExitLinkTarget>
    {
        public SmartExitLinkTargetConfiguration()
            : this("dbo")
        {
        }

        public SmartExitLinkTargetConfiguration(string schema)
        {
            ToTable("SmartExitLinkTarget", schema);
            HasKey(x => new { x.Id, x.LinkId, x.QuestionId });

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.LinkId).HasColumnName(@"LinkID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.QuestionId).HasColumnName(@"QuestionID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Operator).HasColumnName(@"Operator").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Value).HasColumnName(@"Value").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.RequiredForInclusion).HasColumnName(@"RequiredForInclusion").HasColumnType("bit").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SmartLinkAILog
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class SmartLinkAiLogConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SmartLinkAiLog>
    {
        public SmartLinkAiLogConfiguration()
            : this("dbo")
        {
        }

        public SmartLinkAiLogConfiguration(string schema)
        {
            ToTable("SmartLinkAILog", schema);
            HasKey(x => new { x.AutoId, x.LinkId, x.Epi, x.PriorityFrom, x.PriorityTo, x.ChangeType, x.SmartLinkSystem, x.DateChanged });

            Property(x => x.AutoId).HasColumnName(@"AutoID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.LinkId).HasColumnName(@"LinkID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Epi).HasColumnName(@"EPI").HasColumnType("float").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.PriorityFrom).HasColumnName(@"PriorityFrom").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.PriorityTo).HasColumnName(@"PriorityTo").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ChangeType).HasColumnName(@"ChangeType").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SmartLinkSystem).HasColumnName(@"SmartLinkSystem").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateChanged).HasColumnName(@"DateChanged").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SmartLinkLog
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class SmartLinkLogConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SmartLinkLog>
    {
        public SmartLinkLogConfiguration()
            : this("dbo")
        {
        }

        public SmartLinkLogConfiguration(string schema)
        {
            ToTable("SmartLinkLog", schema);
            HasKey(x => new { x.Id, x.LinkId, x.EmailAddress, x.SmartLinkSystem, x.Confirmed, x.DateSent });

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.LinkId).HasColumnName(@"LinkID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OfferId).HasColumnName(@"OfferID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.AffiliateId).HasColumnName(@"AffiliateID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.SubId).HasColumnName(@"SubID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Cpa).HasColumnName(@"CPA").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.SmartLinkSystem).HasColumnName(@"SmartLinkSystem").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(20).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Confirmed).HasColumnName(@"Confirmed").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateSent).HasColumnName(@"DateSent").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateConfirmed).HasColumnName(@"DateConfirmed").HasColumnType("datetime").IsOptional();
            Property(x => x.ReferringUrl).HasColumnName(@"ReferringURL").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(511);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SmartWebLinkConfig
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class SmartWebLinkConfigConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SmartWebLinkConfig>
    {
        public SmartWebLinkConfigConfiguration()
            : this("dbo")
        {
        }

        public SmartWebLinkConfigConfiguration(string schema)
        {
            ToTable("SmartWebLinkConfig", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ExitUrl).HasColumnName(@"ExitURL").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Priority).HasColumnName(@"Priority").HasColumnType("int").IsRequired();
            Property(x => x.Cap).HasColumnName(@"Cap").HasColumnType("int").IsRequired();
            Property(x => x.SendCookieId).HasColumnName(@"SendCookieID").HasColumnType("bit").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SmartWebLinkFields
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class SmartWebLinkFieldConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SmartWebLinkField>
    {
        public SmartWebLinkFieldConfiguration()
            : this("dbo")
        {
        }

        public SmartWebLinkFieldConfiguration(string schema)
        {
            ToTable("SmartWebLinkFields", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SmartWebLinkLog
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class SmartWebLinkLogConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SmartWebLinkLog>
    {
        public SmartWebLinkLogConfiguration()
            : this("dbo")
        {
        }

        public SmartWebLinkLogConfiguration(string schema)
        {
            ToTable("SmartWebLinkLog", schema);
            HasKey(x => new { x.Id, x.LinkId, x.EmailAddress, x.DateSent });

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.LinkId).HasColumnName(@"LinkID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Confirmed).HasColumnName(@"Confirmed").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(10);
            Property(x => x.DateSent).HasColumnName(@"DateSent").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DateConfirmed).HasColumnName(@"DateConfirmed").HasColumnType("datetime").IsOptional();
            Property(x => x.SubId).HasColumnName(@"SubID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(4);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // SmartWebLinkTarget
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class SmartWebLinkTargetConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SmartWebLinkTarget>
    {
        public SmartWebLinkTargetConfiguration()
            : this("dbo")
        {
        }

        public SmartWebLinkTargetConfiguration(string schema)
        {
            ToTable("SmartWebLinkTarget", schema);
            HasKey(x => new { x.Id, x.LinkId, x.QuestionId });

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.LinkId).HasColumnName(@"LinkID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.QuestionId).HasColumnName(@"QuestionID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Operator).HasColumnName(@"Operator").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Value).HasColumnName(@"Value").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.RequiredForInclusion).HasColumnName(@"RequiredForInclusion").HasColumnType("bit").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // States
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class StateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<State>
    {
        public StateConfiguration()
            : this("dbo")
        {
        }

        public StateConfiguration(string schema)
        {
            ToTable("States", schema);
            HasKey(x => x.StateId);

            Property(x => x.StateId).HasColumnName(@"StateId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.St).HasColumnName(@"ST").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(2);
            Property(x => x.Statename).HasColumnName(@"Statename").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Active).HasColumnName(@"Active").HasColumnType("bit").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // UserNews
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class UserNewConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UserNew>
    {
        public UserNewConfiguration()
            : this("dbo")
        {
        }

        public UserNewConfiguration(string schema)
        {
            ToTable("UserNews", schema);
            HasKey(x => x.UserNewsId);

            Property(x => x.UserNewsId).HasColumnName(@"UserNewsID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(250);
            Property(x => x.Message).HasColumnName(@"Message").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2000);
            Property(x => x.MessageType).HasColumnName(@"MessageType").HasColumnType("int").IsRequired();
            Property(x => x.MessageDateTime).HasColumnName(@"MessageDateTime").HasColumnType("datetime").IsRequired();
            Property(x => x.MessageDate).HasColumnName(@"MessageDate").HasColumnType("date").IsRequired();
            Property(x => x.Active).HasColumnName(@"Active").HasColumnType("bit").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // UserSurveyCountAfter
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class UserSurveyCountAfterConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UserSurveyCountAfter>
    {
        public UserSurveyCountAfterConfiguration()
            : this("dbo")
        {
        }

        public UserSurveyCountAfterConfiguration(string schema)
        {
            ToTable("UserSurveyCountAfter", schema);
            HasKey(x => x.UserSurveyCountAfterId);

            Property(x => x.UserSurveyCountAfterId).HasColumnName(@"UserSurveyCountAfterID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(250);
            Property(x => x.SurveyCount).HasColumnName(@"SurveyCount").HasColumnType("int").IsRequired();
            Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // UserSurveyCountBefore
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class UserSurveyCountBeforeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<UserSurveyCountBefore>
    {
        public UserSurveyCountBeforeConfiguration()
            : this("dbo")
        {
        }

        public UserSurveyCountBeforeConfiguration(string schema)
        {
            ToTable("UserSurveyCountBefore", schema);
            HasKey(x => x.UserSurveyCountBeforeId);

            Property(x => x.UserSurveyCountBeforeId).HasColumnName(@"UserSurveyCountBeforeID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(250);
            Property(x => x.SurveyCount).HasColumnName(@"SurveyCount").HasColumnType("int").IsRequired();
            Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // VerifyZipFailure
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class VerifyZipFailureConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VerifyZipFailure>
    {
        public VerifyZipFailureConfiguration()
            : this("dbo")
        {
        }

        public VerifyZipFailureConfiguration(string schema)
        {
            ToTable("VerifyZipFailure", schema);
            HasKey(x => x.VerifyZipFailureId);

            Property(x => x.VerifyZipFailureId).HasColumnName(@"VerifyZipFailureId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Street).HasColumnName(@"Street").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(500);
            Property(x => x.IpAddress).HasColumnName(@"IpAddress").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Zip).HasColumnName(@"Zip").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.IpVerifyResultJson).HasColumnName(@"IpVerifyResultJson").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1000);
            Property(x => x.AddressVerifyResultJson).HasColumnName(@"AddressVerifyResultJson").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1000);
            Property(x => x.InvalidIp).HasColumnName(@"InvalidIP").HasColumnType("bit").IsRequired();
            Property(x => x.InvalidZip).HasColumnName(@"InvalidZip").HasColumnType("bit").IsRequired();
            Property(x => x.InValidAddress).HasColumnName(@"InValidAddress").HasColumnType("bit").IsRequired();
            Property(x => x.NoMatch).HasColumnName(@"NoMatch").HasColumnType("bit").IsRequired();
            Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // vwCBRSurveyStatusWithPending
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class VwCbrSurveyStatusWithPendingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwCbrSurveyStatusWithPending>
    {
        public VwCbrSurveyStatusWithPendingConfiguration()
            : this("dbo")
        {
        }

        public VwCbrSurveyStatusWithPendingConfiguration(string schema)
        {
            ToTable("vwCBRSurveyStatusWithPending", schema);
            HasKey(x => new { x.IsPending, x.Type, x.Id, x.EmailAddress, x.SurveyId, x.PayoutValue, x.ReceiveValue, x.StatusId, x.InsertDate, x.Title });

            Property(x => x.EarningsClearedDate).HasColumnName(@"EarningsClearedDate").HasColumnType("datetime").IsOptional();
            Property(x => x.IsPending).HasColumnName(@"IsPending").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Type).HasColumnName(@"Type").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SurveyId).HasColumnName(@"SurveyID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.PayoutValue).HasColumnName(@"PayoutValue").HasColumnType("money").IsRequired().HasPrecision(19,4).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ReceiveValue).HasColumnName(@"ReceiveValue").HasColumnType("money").IsRequired().HasPrecision(19,4).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.StatusId).HasColumnName(@"StatusID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DtCookieId).HasColumnName(@"DTCookieID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.RandomId).HasColumnName(@"RandomID").HasColumnType("int").IsOptional();
            Property(x => x.AffCookieId).HasColumnName(@"AffCookieID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CompletedDate).HasColumnName(@"CompletedDate").HasColumnType("datetime").IsOptional();
            Property(x => x.DeniedDate).HasColumnName(@"DeniedDate").HasColumnType("datetime").IsOptional();
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(8000);
            Property(x => x.Title).HasColumnName(@"Title").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(511).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // vwDebugIP
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class VwDebugIpConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwDebugIp>
    {
        public VwDebugIpConfiguration()
            : this("dbo")
        {
        }

        public VwDebugIpConfiguration(string schema)
        {
            ToTable("vwDebugIP", schema);
            HasKey(x => new { x.SiteVertical, x.EmailAddress, x.CountryId, x.SelectedLanguageId, x.OptInDate, x.LastRunDate, x.LastSendOnDay, x.DoNotSendTo, x.ThirdPartyListsUpdated, x.InsertDate });

            Property(x => x.SiteVertical).HasColumnName(@"SiteVertical").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Salutation).HasColumnName(@"Salutation").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Firstname).HasColumnName(@"Firstname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Lastname).HasColumnName(@"Lastname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Address2).HasColumnName(@"Address2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.City).HasColumnName(@"City").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.State).HasColumnName(@"State").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Zip).HasColumnName(@"Zip").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Phone).HasColumnName(@"Phone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Mobilephone).HasColumnName(@"Mobilephone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.SmartPhone).HasColumnName(@"SmartPhone").HasColumnType("bit").IsOptional();
            Property(x => x.BirthdayDay).HasColumnName(@"BirthdayDay").HasColumnType("int").IsOptional();
            Property(x => x.BirthdayMonth).HasColumnName(@"BirthdayMonth").HasColumnType("int").IsOptional();
            Property(x => x.BirthdayYear).HasColumnName(@"BirthdayYear").HasColumnType("int").IsOptional();
            Property(x => x.Gender).HasColumnName(@"Gender").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1);
            Property(x => x.Occupation).HasColumnName(@"Occupation").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Income).HasColumnName(@"Income").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.HomeOwnership).HasColumnName(@"HomeOwnership").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Education).HasColumnName(@"Education").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.MaritalStatus).HasColumnName(@"MaritalStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Children).HasColumnName(@"Children").HasColumnType("int").IsOptional();
            Property(x => x.Ethnicity).HasColumnName(@"Ethnicity").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Password).HasColumnName(@"Password").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.OfferId).HasColumnName(@"OfferID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.AffiliateId).HasColumnName(@"AffiliateID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.SubId).HasColumnName(@"SubID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.Cost).HasColumnName(@"Cost").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SelectedLanguageId).HasColumnName(@"SelectedLanguageID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OptInDate).HasColumnName(@"OptInDate").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.LastRunDate).HasColumnName(@"LastRunDate").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.LastSendOnDay).HasColumnName(@"LastSendOnDay").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OptOutDate).HasColumnName(@"OptOutDate").HasColumnType("datetime").IsOptional();
            Property(x => x.DoNotSendTo).HasColumnName(@"DoNotSendTo").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ConfirmedDate).HasColumnName(@"ConfirmedDate").HasColumnType("datetime").IsOptional();
            Property(x => x.ThirdPartyListsUpdated).HasColumnName(@"ThirdPartyListsUpdated").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Ip).HasColumnName(@"IP").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.Uid).HasColumnName(@"UID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Clik).HasColumnName(@"Clik").HasColumnType("bit").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // vwJobCodes
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class VwJobCodeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwJobCode>
    {
        public VwJobCodeConfiguration()
            : this("dbo")
        {
        }

        public VwJobCodeConfiguration(string schema)
        {
            ToTable("vwJobCodes", schema);
            HasKey(x => new { x.CbrJobCodeId, x.OccupationCode, x.CbrQuestionDropdownId, x.Active, x.Answer });

            Property(x => x.CbrJobCodeId).HasColumnName(@"CBRJobCodeID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OccupationCode).HasColumnName(@"OccupationCode").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.CbrQuestionDropdownId).HasColumnName(@"CBRQuestionDropdownID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Active).HasColumnName(@"Active").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Answer).HasColumnName(@"Answer").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // vwOptInLeadKeys
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class VwOptInLeadKeyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwOptInLeadKey>
    {
        public VwOptInLeadKeyConfiguration()
            : this("dbo")
        {
        }

        public VwOptInLeadKeyConfiguration(string schema)
        {
            ToTable("vwOptInLeadKeys", schema);
            HasKey(x => new { x.EmailAddress, x.CountryId, x.InsertDate });

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OfferId).HasColumnName(@"OfferID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.AffiliateId).HasColumnName(@"AffiliateID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.SubId).HasColumnName(@"SubID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Firstname).HasColumnName(@"Firstname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Lastname).HasColumnName(@"Lastname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Zip).HasColumnName(@"Zip").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Phone).HasColumnName(@"Phone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.BirthdayDay).HasColumnName(@"BirthdayDay").HasColumnType("int").IsOptional();
            Property(x => x.BirthdayMonth).HasColumnName(@"BirthdayMonth").HasColumnType("int").IsOptional();
            Property(x => x.BirthdayYear).HasColumnName(@"BirthdayYear").HasColumnType("int").IsOptional();
            Property(x => x.Gender).HasColumnName(@"Gender").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1);
            Property(x => x.Password).HasColumnName(@"Password").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Clik).HasColumnName(@"Clik").HasColumnType("bit").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // vwOptInLeadPJDegree
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class VwOptInLeadPjDegreeConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwOptInLeadPjDegree>
    {
        public VwOptInLeadPjDegreeConfiguration()
            : this("dbo")
        {
        }

        public VwOptInLeadPjDegreeConfiguration(string schema)
        {
            ToTable("vwOptInLeadPJDegree", schema);
            HasKey(x => new { x.SiteVertical, x.EmailAddress, x.CountryId, x.SelectedLanguageId, x.OptInDate, x.LastRunDate, x.LastSendOnDay, x.DoNotSendTo, x.ThirdPartyListsUpdated, x.InsertDate });

            Property(x => x.SiteVertical).HasColumnName(@"SiteVertical").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Salutation).HasColumnName(@"Salutation").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Firstname).HasColumnName(@"Firstname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Lastname).HasColumnName(@"Lastname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Address2).HasColumnName(@"Address2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.City).HasColumnName(@"City").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.State).HasColumnName(@"State").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Zip).HasColumnName(@"Zip").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Phone).HasColumnName(@"Phone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Mobilephone).HasColumnName(@"Mobilephone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.SmartPhone).HasColumnName(@"SmartPhone").HasColumnType("bit").IsOptional();
            Property(x => x.BirthdayDay).HasColumnName(@"BirthdayDay").HasColumnType("int").IsOptional();
            Property(x => x.BirthdayMonth).HasColumnName(@"BirthdayMonth").HasColumnType("int").IsOptional();
            Property(x => x.BirthdayYear).HasColumnName(@"BirthdayYear").HasColumnType("int").IsOptional();
            Property(x => x.OfferId).HasColumnName(@"OfferID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.AffiliateId).HasColumnName(@"AffiliateID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.SubId).HasColumnName(@"SubID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SelectedLanguageId).HasColumnName(@"SelectedLanguageID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OptInDate).HasColumnName(@"OptInDate").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.LastRunDate).HasColumnName(@"LastRunDate").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.LastSendOnDay).HasColumnName(@"LastSendOnDay").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OptOutDate).HasColumnName(@"OptOutDate").HasColumnType("datetime").IsOptional();
            Property(x => x.DoNotSendTo).HasColumnName(@"DoNotSendTo").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ThirdPartyListsUpdated).HasColumnName(@"ThirdPartyListsUpdated").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Ip).HasColumnName(@"IP").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.Cost).HasColumnName(@"Cost").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.Gender).HasColumnName(@"Gender").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1);
            Property(x => x.Occupation).HasColumnName(@"Occupation").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Income).HasColumnName(@"Income").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.HomeOwnership).HasColumnName(@"HomeOwnership").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Education).HasColumnName(@"Education").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.MaritalStatus).HasColumnName(@"MaritalStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Children).HasColumnName(@"Children").HasColumnType("int").IsOptional();
            Property(x => x.Ethnicity).HasColumnName(@"Ethnicity").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Password).HasColumnName(@"Password").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // vwOptInLeadSurveys
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class VwOptInLeadSurveyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwOptInLeadSurvey>
    {
        public VwOptInLeadSurveyConfiguration()
            : this("dbo")
        {
        }

        public VwOptInLeadSurveyConfiguration(string schema)
        {
            ToTable("vwOptInLeadSurveys", schema);
            HasKey(x => new { x.SiteVertical, x.EmailAddress, x.CountryId, x.SelectedLanguageId, x.OptInDate, x.LastRunDate, x.LastSendOnDay, x.DoNotSendTo, x.ThirdPartyListsUpdated, x.InsertDate });

            Property(x => x.SiteVertical).HasColumnName(@"SiteVertical").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Salutation).HasColumnName(@"Salutation").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Firstname).HasColumnName(@"Firstname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Lastname).HasColumnName(@"Lastname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Address2).HasColumnName(@"Address2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.City).HasColumnName(@"City").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.State).HasColumnName(@"State").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Zip).HasColumnName(@"Zip").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Phone).HasColumnName(@"Phone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Mobilephone).HasColumnName(@"Mobilephone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.SmartPhone).HasColumnName(@"SmartPhone").HasColumnType("bit").IsOptional();
            Property(x => x.BirthdayDay).HasColumnName(@"BirthdayDay").HasColumnType("int").IsOptional();
            Property(x => x.BirthdayMonth).HasColumnName(@"BirthdayMonth").HasColumnType("int").IsOptional();
            Property(x => x.BirthdayYear).HasColumnName(@"BirthdayYear").HasColumnType("int").IsOptional();
            Property(x => x.OfferId).HasColumnName(@"OfferID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.AffiliateId).HasColumnName(@"AffiliateID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.SubId).HasColumnName(@"SubID").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SelectedLanguageId).HasColumnName(@"SelectedLanguageID").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OptInDate).HasColumnName(@"OptInDate").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.LastRunDate).HasColumnName(@"LastRunDate").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.LastSendOnDay).HasColumnName(@"LastSendOnDay").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.OptOutDate).HasColumnName(@"OptOutDate").HasColumnType("datetime").IsOptional();
            Property(x => x.DoNotSendTo).HasColumnName(@"DoNotSendTo").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ThirdPartyListsUpdated).HasColumnName(@"ThirdPartyListsUpdated").HasColumnType("bit").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.InsertDate).HasColumnName(@"InsertDate").HasColumnType("datetime").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Ip).HasColumnName(@"IP").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(15);
            Property(x => x.Cost).HasColumnName(@"Cost").HasColumnType("money").IsOptional().HasPrecision(19,4);
            Property(x => x.Gender).HasColumnName(@"Gender").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1);
            Property(x => x.Occupation).HasColumnName(@"Occupation").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Income).HasColumnName(@"Income").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.HomeOwnership).HasColumnName(@"HomeOwnership").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Education).HasColumnName(@"Education").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.MaritalStatus).HasColumnName(@"MaritalStatus").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Children).HasColumnName(@"Children").HasColumnType("int").IsOptional();
            Property(x => x.Ethnicity).HasColumnName(@"Ethnicity").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Password).HasColumnName(@"Password").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // vwOptInLeadUsers
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class VwOptInLeadUserConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<VwOptInLeadUser>
    {
        public VwOptInLeadUserConfiguration()
            : this("dbo")
        {
        }

        public VwOptInLeadUserConfiguration(string schema)
        {
            ToTable("vwOptInLeadUsers", schema);
            HasKey(x => x.EmailAddress);

            Property(x => x.Id).HasColumnName(@"ID").HasColumnType("uniqueidentifier").IsOptional();
            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Firstname).HasColumnName(@"Firstname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Lastname).HasColumnName(@"Lastname").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Address).HasColumnName(@"Address").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Address2).HasColumnName(@"Address2").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.City).HasColumnName(@"City").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.State).HasColumnName(@"State").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Zip).HasColumnName(@"Zip").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Phone).HasColumnName(@"Phone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.Mobilephone).HasColumnName(@"Mobilephone").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(100);
            Property(x => x.SmartPhone).HasColumnName(@"SmartPhone").HasColumnType("bit").IsOptional();
            Property(x => x.BirthdayDay).HasColumnName(@"BirthdayDay").HasColumnType("int").IsOptional();
            Property(x => x.BirthdayMonth).HasColumnName(@"BirthdayMonth").HasColumnType("int").IsOptional();
            Property(x => x.BirthdayYear).HasColumnName(@"BirthdayYear").HasColumnType("int").IsOptional();
            Property(x => x.Gender).HasColumnName(@"Gender").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1);
            Property(x => x.Ethnicity).HasColumnName(@"Ethnicity").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Password).HasColumnName(@"Password").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.Clik).HasColumnName(@"Clik").HasColumnType("bit").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // WeeklySurveyAnswers
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class WeeklySurveyAnswerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WeeklySurveyAnswer>
    {
        public WeeklySurveyAnswerConfiguration()
            : this("dbo")
        {
        }

        public WeeklySurveyAnswerConfiguration(string schema)
        {
            ToTable("WeeklySurveyAnswers", schema);
            HasKey(x => new { x.EmailAddress, x.SurveyId, x.CountryId });

            Property(x => x.EmailAddress).HasColumnName(@"EmailAddress").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.SurveyId).HasColumnName(@"SurveyID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.AnswerId).HasColumnName(@"AnswerID").HasColumnType("int").IsRequired();
            Property(x => x.AnswerDate).HasColumnName(@"AnswerDate").HasColumnType("datetime").IsRequired();
            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // WeeklySurveyConfig
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class WeeklySurveyConfigConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WeeklySurveyConfig>
    {
        public WeeklySurveyConfigConfiguration()
            : this("dbo")
        {
        }

        public WeeklySurveyConfigConfiguration(string schema)
        {
            ToTable("WeeklySurveyConfig", schema);
            HasKey(x => new { x.SurveyId, x.Answer, x.CountryId });

            Property(x => x.AutoId).HasColumnName(@"AutoID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.SurveyId).HasColumnName(@"SurveyID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Answer).HasColumnName(@"Answer").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(255).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.DisplayOrder).HasColumnName(@"DisplayOrder").HasColumnType("int").IsRequired();
            Property(x => x.CountryId).HasColumnName(@"CountryID").HasColumnType("char").IsRequired().IsFixedLength().IsUnicode(false).HasMaxLength(2).HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // WithdrawReason
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public partial class WithdrawReasonConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WithdrawReason>
    {
        public WithdrawReasonConfiguration()
            : this("dbo")
        {
        }

        public WithdrawReasonConfiguration(string schema)
        {
            ToTable("WithdrawReason", schema);
            HasKey(x => x.WithdrawReasonId);

            Property(x => x.WithdrawReasonId).HasColumnName(@"WithdrawReasonID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Reason).HasColumnName(@"Reason").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(250);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    #endregion

}
// </auto-generated>

